---------------------------------- page 1 ----------------------------------
#### DownExpandingContainer('title')
  Paragraph('OpsLog Documentation', style='title page title')
       > (0,0,1,0,2) title page title
         (0,0,0,0,2) body
    SingleStyledText('OpsLog Documentation')
  Paragraph('Release v1.8 May, 2019', style='title page subtitle')
       > (0,0,1,0,2) title page subtitle
         (0,0,0,0,2) body
    SingleStyledText('Release v1.8 May, 2019')
  Paragraph('Jacob Coburn', style='title page author')
       > (0,0,1,0,2) title page author
         (0,0,0,0,2) body
    SingleStyledText('Jacob Coburn')
  Paragraph('June 12, 2019', style='title page date')
       > (0,0,1,0,2) title page date
         (0,0,0,0,2) body
    SingleStyledText('June 12, 2019')
---------------------------------- page i ----------------------------------
#### FlowablesContainer('chapter title')
  Paragraph('Table of Contents', style='front matter section title')
       > (0,0,1,0,2) front matter section title
         (0,0,0,0,2) body
    Field('Table of Contents')
      SingleStyledText('Table of Contents')
#### ChainedContainer('column1')
  TableOfContentsSection(style='table of contents')
       > (0,0,1,0,1) table of contents section
         (0,0,0,1,1) chapter
    TableOfContents()   table of contents
         > (0,0,0,0,2) table of contents
      TableOfContentsEntry('1	Overview on How to Install and...')
           > (0,0,0,1,2) toc level 1
          MixedStyledText('1	Overview on How to Install and...')
            ReferenceField('1')
                 x (0,0,0,1,3) toc linked reference
                 > (0,0,0,1,1) linked reference
              SingleStyledText('1')
            Tab('	')
            ReferenceField('Overview on How to Install and s...')
                 x (0,0,0,1,3) toc linked reference
                 > (0,0,0,1,1) linked reference
              SingleStyledText('Overview on How to Install and s...')
            Tab('	')
            ReferenceField('1')
                 x (0,0,0,1,3) toc linked reference
                 > (0,0,0,1,1) linked reference
              SingleStyledText('1')
      TableOfContentsEntry('1.1	Simple Installation/Upgrade	...')
           > (0,0,0,1,2) toc level 2
          MixedStyledText('1.1	Simple Installation/Upgrade	...')
            ReferenceField('1.1')
                 x (0,0,0,1,3) toc linked reference
                 > (0,0,0,1,1) linked reference
              SingleStyledText('1.1')
            Tab('	')
            ReferenceField('Simple Installation/Upgrade')
                 x (0,0,0,1,3) toc linked reference
                 > (0,0,0,1,1) linked reference
              SingleStyledText('Simple Installation/Upgrade')
            Tab('	')
            ReferenceField('1')
                 x (0,0,0,1,3) toc linked reference
                 > (0,0,0,1,1) linked reference
              SingleStyledText('1')
      TableOfContentsEntry('1.2	Install Location	2')
           > (0,0,0,1,2) toc level 2
          MixedStyledText('1.2	Install Location	2')
            ReferenceField('1.2')
                 x (0,0,0,1,3) toc linked reference
                 > (0,0,0,1,1) linked reference
              SingleStyledText('1.2')
            Tab('	')
            ReferenceField('Install Location')
                 x (0,0,0,1,3) toc linked reference
                 > (0,0,0,1,1) linked reference
              SingleStyledText('Install Location')
            Tab('	')
            ReferenceField('2')
                 x (0,0,0,1,3) toc linked reference
                 > (0,0,0,1,1) linked reference
              SingleStyledText('2')
      TableOfContentsEntry('1.3	Post Install	2')
           > (0,0,0,1,2) toc level 2
          MixedStyledText('1.3	Post Install	2')
            ReferenceField('1.3')
                 x (0,0,0,1,3) toc linked reference
                 > (0,0,0,1,1) linked reference
              SingleStyledText('1.3')
            Tab('	')
            ReferenceField('Post Install')
                 x (0,0,0,1,3) toc linked reference
                 > (0,0,0,1,1) linked reference
              SingleStyledText('Post Install')
            Tab('	')
            ReferenceField('2')
                 x (0,0,0,1,3) toc linked reference
                 > (0,0,0,1,1) linked reference
              SingleStyledText('2')
      TableOfContentsEntry('1.4	Simple Uninstall	3')
           > (0,0,0,1,2) toc level 2
          MixedStyledText('1.4	Simple Uninstall	3')
            ReferenceField('1.4')
                 x (0,0,0,1,3) toc linked reference
                 > (0,0,0,1,1) linked reference
              SingleStyledText('1.4')
            Tab('	')
            ReferenceField('Simple Uninstall')
                 x (0,0,0,1,3) toc linked reference
                 > (0,0,0,1,1) linked reference
              SingleStyledText('Simple Uninstall')
            Tab('	')
            ReferenceField('3')
                 x (0,0,0,1,3) toc linked reference
                 > (0,0,0,1,1) linked reference
              SingleStyledText('3')
      TableOfContentsEntry('2	Opslog Usage	3')
           > (0,0,0,1,2) toc level 1
          MixedStyledText('2	Opslog Usage	3')
            ReferenceField('2')
                 x (0,0,0,1,3) toc linked reference
                 > (0,0,0,1,1) linked reference
              SingleStyledText('2')
            Tab('	')
            ReferenceField('Opslog Usage')
                 x (0,0,0,1,3) toc linked reference
                 > (0,0,0,1,1) linked reference
              SingleStyledText('Opslog Usage')
            Tab('	')
            ReferenceField('3')
                 x (0,0,0,1,3) toc linked reference
                 > (0,0,0,1,1) linked reference
              SingleStyledText('3')
      TableOfContentsEntry('2.1	Basic Info	3')
           > (0,0,0,1,2) toc level 2
          MixedStyledText('2.1	Basic Info	3')
            ReferenceField('2.1')
                 x (0,0,0,1,3) toc linked reference
                 > (0,0,0,1,1) linked reference
              SingleStyledText('2.1')
            Tab('	')
            ReferenceField('Basic Info')
                 x (0,0,0,1,3) toc linked reference
                 > (0,0,0,1,1) linked reference
              SingleStyledText('Basic Info')
            Tab('	')
            ReferenceField('3')
                 x (0,0,0,1,3) toc linked reference
                 > (0,0,0,1,1) linked reference
              SingleStyledText('3')
      TableOfContentsEntry('2.2	Log File Syntax	3')
           > (0,0,0,1,2) toc level 2
          MixedStyledText('2.2	Log File Syntax	3')
            ReferenceField('2.2')
                 x (0,0,0,1,3) toc linked reference
                 > (0,0,0,1,1) linked reference
              SingleStyledText('2.2')
            Tab('	')
            ReferenceField('Log File Syntax')
                 x (0,0,0,1,3) toc linked reference
                 > (0,0,0,1,1) linked reference
              SingleStyledText('Log File Syntax')
            Tab('	')
            ReferenceField('3')
                 x (0,0,0,1,3) toc linked reference
                 > (0,0,0,1,1) linked reference
              SingleStyledText('3')
      TableOfContentsEntry('2.3	Administration Arguments	4')
           > (0,0,0,1,2) toc level 2
          MixedStyledText('2.3	Administration Arguments	4')
            ReferenceField('2.3')
                 x (0,0,0,1,3) toc linked reference
                 > (0,0,0,1,1) linked reference
              SingleStyledText('2.3')
            Tab('	')
            ReferenceField('Administration Arguments')
                 x (0,0,0,1,3) toc linked reference
                 > (0,0,0,1,1) linked reference
              SingleStyledText('Administration Arguments')
            Tab('	')
            ReferenceField('4')
                 x (0,0,0,1,3) toc linked reference
                 > (0,0,0,1,1) linked reference
              SingleStyledText('4')
      TableOfContentsEntry('2.4	Management Arguments	4')
           > (0,0,0,1,2) toc level 2
          MixedStyledText('2.4	Management Arguments	4')
            ReferenceField('2.4')
                 x (0,0,0,1,3) toc linked reference
                 > (0,0,0,1,1) linked reference
              SingleStyledText('2.4')
            Tab('	')
            ReferenceField('Management Arguments')
                 x (0,0,0,1,3) toc linked reference
                 > (0,0,0,1,1) linked reference
              SingleStyledText('Management Arguments')
            Tab('	')
            ReferenceField('4')
                 x (0,0,0,1,3) toc linked reference
                 > (0,0,0,1,1) linked reference
              SingleStyledText('4')
      TableOfContentsEntry('2.5	Output Arguments	4')
           > (0,0,0,1,2) toc level 2
          MixedStyledText('2.5	Output Arguments	4')
            ReferenceField('2.5')
                 x (0,0,0,1,3) toc linked reference
                 > (0,0,0,1,1) linked reference
              SingleStyledText('2.5')
            Tab('	')
            ReferenceField('Output Arguments')
                 x (0,0,0,1,3) toc linked reference
                 > (0,0,0,1,1) linked reference
              SingleStyledText('Output Arguments')
            Tab('	')
            ReferenceField('4')
                 x (0,0,0,1,3) toc linked reference
                 > (0,0,0,1,1) linked reference
              SingleStyledText('4')
      TableOfContentsEntry('2.6	Logging Arguments	5')
           > (0,0,0,1,2) toc level 2
          MixedStyledText('2.6	Logging Arguments	5')
            ReferenceField('2.6')
                 x (0,0,0,1,3) toc linked reference
                 > (0,0,0,1,1) linked reference
              SingleStyledText('2.6')
            Tab('	')
            ReferenceField('Logging Arguments')
                 x (0,0,0,1,3) toc linked reference
                 > (0,0,0,1,1) linked reference
              SingleStyledText('Logging Arguments')
            Tab('	')
            ReferenceField('5')
                 x (0,0,0,1,3) toc linked reference
                 > (0,0,0,1,1) linked reference
              SingleStyledText('5')
      TableOfContentsEntry('3	Opslog Examples	5')
           > (0,0,0,1,2) toc level 1
          MixedStyledText('3	Opslog Examples	5')
            ReferenceField('3')
                 x (0,0,0,1,3) toc linked reference
                 > (0,0,0,1,1) linked reference
              SingleStyledText('3')
            Tab('	')
            ReferenceField('Opslog Examples')
                 x (0,0,0,1,3) toc linked reference
                 > (0,0,0,1,1) linked reference
              SingleStyledText('Opslog Examples')
            Tab('	')
            ReferenceField('5')
                 x (0,0,0,1,3) toc linked reference
                 > (0,0,0,1,1) linked reference
              SingleStyledText('5')
      TableOfContentsEntry('3.1	Displaying and Changing the ...')
           > (0,0,0,1,2) toc level 2
          MixedStyledText('3.1	Displaying and Changing the ...')
            ReferenceField('3.1')
                 x (0,0,0,1,3) toc linked reference
                 > (0,0,0,1,1) linked reference
              SingleStyledText('3.1')
            Tab('	')
            ReferenceField('Displaying and Changing the Curr...')
                 x (0,0,0,1,3) toc linked reference
                 > (0,0,0,1,1) linked reference
              SingleStyledText('Displaying and Changing the Curr...')
            Tab('	')
            ReferenceField('5')
                 x (0,0,0,1,3) toc linked reference
                 > (0,0,0,1,1) linked reference
              SingleStyledText('5')
      TableOfContentsEntry('3.2	Creating Log Entries	6')
           > (0,0,0,1,2) toc level 2
          MixedStyledText('3.2	Creating Log Entries	6')
            ReferenceField('3.2')
                 x (0,0,0,1,3) toc linked reference
                 > (0,0,0,1,1) linked reference
              SingleStyledText('3.2')
            Tab('	')
            ReferenceField('Creating Log Entries')
                 x (0,0,0,1,3) toc linked reference
                 > (0,0,0,1,1) linked reference
              SingleStyledText('Creating Log Entries')
            Tab('	')
            ReferenceField('6')
                 x (0,0,0,1,3) toc linked reference
                 > (0,0,0,1,1) linked reference
              SingleStyledText('6')
      TableOfContentsEntry('3.3	Displaying and Searching the...')
           > (0,0,0,1,2) toc level 2
          MixedStyledText('3.3	Displaying and Searching the...')
            ReferenceField('3.3')
                 x (0,0,0,1,3) toc linked reference
                 > (0,0,0,1,1) linked reference
              SingleStyledText('3.3')
            Tab('	')
            ReferenceField('Displaying and Searching the Log')
                 x (0,0,0,1,3) toc linked reference
                 > (0,0,0,1,1) linked reference
              SingleStyledText('Displaying and Searching the Log')
            Tab('	')
            ReferenceField('7')
                 x (0,0,0,1,3) toc linked reference
                 > (0,0,0,1,1) linked reference
              SingleStyledText('7')
      TableOfContentsEntry('3.4	Exporting and Merging Logs	8')
           > (0,0,0,1,2) toc level 2
          MixedStyledText('3.4	Exporting and Merging Logs	8')
            ReferenceField('3.4')
                 x (0,0,0,1,3) toc linked reference
                 > (0,0,0,1,1) linked reference
              SingleStyledText('3.4')
            Tab('	')
            ReferenceField('Exporting and Merging Logs')
                 x (0,0,0,1,3) toc linked reference
                 > (0,0,0,1,1) linked reference
              SingleStyledText('Exporting and Merging Logs')
            Tab('	')
            ReferenceField('8')
                 x (0,0,0,1,3) toc linked reference
                 > (0,0,0,1,1) linked reference
              SingleStyledText('8')
#### DownExpandingContainer('footer')
  Footer('		i')
       > (0,0,0,0,2) footer
         (0,0,0,0,1) body
    MixedStyledText('		i')
      Tab('	')
      Tab('	')
      Field('i')
        SingleStyledText('i')
---------------------------------- page 1 ----------------------------------
#### FlowablesContainer('chapter title')
  Paragraph('CHAPTER 1', style='body matter chapter label')
       > (0,0,1,0,2) body matter chapter label
         (0,0,0,0,2) body
    MixedStyledText('CHAPTER 1')
      MixedStyledText('CHAPTER ')
        StringField('CHAPTER')
        SingleStyledText(' ')
      Field('1', style='number')
           > (0,0,2,0,3) body matter chapter number
        SingleStyledText('1')
  Paragraph('Overview on How to Install and s...', style='body matter chapter title')
       > (0,0,1,0,2) body matter chapter title
         (0,0,0,0,2) body
    Field('Overview on How to Install and s...')
      SingleStyledText('Overview on How to Install and s...')
#### ChainedContainer('column1')
  DocumentTree()
    Paragraph('The opslog program is designed t...')   /home/assessor/working_dir/python_projects/opslog/docs/index.rst:9 <paragraph>
         > (0,0,0,0,2) body
      MixedStyledText('The opslog program is designed t...')
        SingleStyledText('The opslog program is designed t...')
    Paragraph('Entries are added to the log by ...')   /home/assessor/working_dir/python_projects/opslog/docs/index.rst:17 <paragraph>
         > (0,0,0,0,2) body
      MixedStyledText('Entries are added to the log by ...')
        SingleStyledText('Entries are added to the log by ...')
    StaticGroupedFlowables(style='block quote')   <rinoh output>:0 <block_quote>
         > (0,0,1,0,1) block quote
      List(style='bulleted')   /home/assessor/working_dir/python_projects/opslog/docs/index.rst:23 <bullet_list>
           > (0,0,1,0,2) bulleted list
        ListItem()
             x (0,0,1,0,4) bulleted list item
             > fallback to default style
          ListItemLabel('•')
               > (0,0,1,0,6) bulleted list item label
                 (0,0,0,0,2) list item label
              MixedStyledText('•')
                SingleStyledText('')
                SingleStyledText('•')
                SingleStyledText('')
          StaticGroupedFlowables()   None:None <list_item>
               > (0,0,0,0,3) list item body
            Paragraph('A pre-approved action number')   /home/assessor/working_dir/python_projects/opslog/docs/index.rst:23 <paragraph>
                 > (0,0,0,0,5) list item paragraph
                   (0,0,0,0,2) body
              MixedStyledText('A pre-approved action number')
                SingleStyledText('A pre-approved action number')
        ListItem()
             x (0,0,1,0,4) bulleted list item
             > fallback to default style
          ListItemLabel('•')
               > (0,0,1,0,6) bulleted list item label
                 (0,0,0,0,2) list item label
              MixedStyledText('•')
                SingleStyledText('')
                SingleStyledText('•')
                SingleStyledText('')
          StaticGroupedFlowables()   None:None <list_item>
               > (0,0,0,0,3) list item body
            Paragraph('An ip address/range')   /home/assessor/working_dir/python_projects/opslog/docs/index.rst:24 <paragraph>
                 > (0,0,0,0,5) list item paragraph
                   (0,0,0,0,2) body
              MixedStyledText('An ip address/range')
                SingleStyledText('An ip address/range')
        ListItem()
             x (0,0,1,0,4) bulleted list item
             > fallback to default style
          ListItemLabel('•')
               > (0,0,1,0,6) bulleted list item label
                 (0,0,0,0,2) list item label
              MixedStyledText('•')
                SingleStyledText('')
                SingleStyledText('•')
                SingleStyledText('')
          StaticGroupedFlowables()   None:None <list_item>
               > (0,0,0,0,3) list item body
            Paragraph('Command syntax')   /home/assessor/working_dir/python_projects/opslog/docs/index.rst:25 <paragraph>
                 > (0,0,0,0,5) list item paragraph
                   (0,0,0,0,2) body
              MixedStyledText('Command syntax')
                SingleStyledText('Command syntax')
        ListItem()
             x (0,0,1,0,4) bulleted list item
             > fallback to default style
          ListItemLabel('•')
               > (0,0,1,0,6) bulleted list item label
                 (0,0,0,0,2) list item label
              MixedStyledText('•')
                SingleStyledText('')
                SingleStyledText('•')
                SingleStyledText('')
          StaticGroupedFlowables()   None:None <list_item>
               > (0,0,0,0,3) list item body
            Paragraph('Multiple flags used to tag entri...')   /home/assessor/working_dir/python_projects/opslog/docs/index.rst:26 <paragraph>
                 > (0,0,0,0,5) list item paragraph
                   (0,0,0,0,2) body
              MixedStyledText('Multiple flags used to tag entri...')
                SingleStyledText('Multiple flags used to tag entri...')
        ListItem()
             x (0,0,1,0,4) bulleted list item
             > fallback to default style
          ListItemLabel('•')
               > (0,0,1,0,6) bulleted list item label
                 (0,0,0,0,2) list item label
              MixedStyledText('•')
                SingleStyledText('')
                SingleStyledText('•')
                SingleStyledText('')
          StaticGroupedFlowables()   None:None <list_item>
               > (0,0,0,0,3) list item body
            Paragraph('Notes by the operator about the ...')   /home/assessor/working_dir/python_projects/opslog/docs/index.rst:27 <paragraph>
                 > (0,0,0,0,5) list item paragraph
                   (0,0,0,0,2) body
              MixedStyledText('Notes by the operator about the ...')
                SingleStyledText('Notes by the operator about the ...')
    Paragraph('Using flags to tag log entries a...')   /home/assessor/working_dir/python_projects/opslog/docs/index.rst:29 <paragraph>
         > (0,0,0,0,2) body
      MixedStyledText('Using flags to tag log entries a...')
        SingleStyledText('Using flags to tag log entries a...')
    Paragraph('Additionally, the program allows...')   /home/assessor/working_dir/python_projects/opslog/docs/index.rst:33 <paragraph>
         > (0,0,0,0,2) body
      MixedStyledText('Additionally, the program allows...')
        SingleStyledText('Additionally, the program allows...')
    Paragraph('Finally, operator logs can be ex...')   /home/assessor/working_dir/python_projects/opslog/docs/index.rst:38 <paragraph>
         > (0,0,0,0,2) body
      MixedStyledText('Finally, operator logs can be ex...')
        SingleStyledText('Finally, operator logs can be ex...')
    StaticGroupedFlowables()   /home/assessor/working_dir/python_projects/opslog/docs/index.rst:0 <compound>
      StaticGroupedFlowables(id='%Installation')   None:None <start_of_file>
        Section(id='%Installation#overview-on-how-to-install-and-setup-this-script')   /home/assessor/working_dir/python_projects/opslog/docs/Installation.rst:4 <section>
             > (0,0,0,1,2) chapter
          Section(id='%Installation#simple-installation-upgrade')   /home/assessor/working_dir/python_projects/opslog/docs/Installation.rst:7 <section>
            Heading('1.1 Simple Installation/Upgrade')   /home/assessor/working_dir/python_projects/opslog/docs/Installation.rst:7 <title>
                 > (0,0,0,1,2) heading level 2
                   (0,0,0,0,2) other heading levels
                MixedStyledText('1.1 Simple Installation/Upgrade')
                  SingleStyledText('1.1')
                  SingleStyledText(' ')
                  SingleStyledText('Simple Installation/Upgrade')
            List(style='enumerated')   /home/assessor/working_dir/python_projects/opslog/docs/Installation.rst:9 <enumerated_list>
                 > (0,0,1,0,2) enumerated list
              ListItem()
                   x (0,0,1,0,4) enumerated list item
                   > fallback to default style
                ListItemLabel('1.')
                     > (0,0,1,0,6) enumerated list item label
                       (0,0,0,0,2) list item label
                    MixedStyledText('1.')
                      SingleStyledText('1')
                      SingleStyledText('.')
                StaticGroupedFlowables()   /home/assessor/working_dir/python_projects/opslog/docs/Installation.rst:None <list_item>
                     > (0,0,0,0,3) list item body
                  Paragraph('Download the opslog program and ...')   /home/assessor/working_dir/python_projects/opslog/docs/Installation.rst:9 <paragraph>
                       > (0,0,0,0,5) list item paragraph
                         (0,0,0,0,2) body
                    MixedStyledText('Download the opslog program and ...')
                      SingleStyledText('Download the opslog program and ...')
              ListItem()
                   x (0,0,1,0,4) enumerated list item
                   > fallback to default style
                ListItemLabel('2.')
                     > (0,0,1,0,6) enumerated list item label
                       (0,0,0,0,2) list item label
                    MixedStyledText('2.')
                      SingleStyledText('2')
                      SingleStyledText('.')
                StaticGroupedFlowables()   /home/assessor/working_dir/python_projects/opslog/docs/Installation.rst:None <list_item>
                     > (0,0,0,0,3) list item body
                  Paragraph('Inside the opslog folder run the...')   /home/assessor/working_dir/python_projects/opslog/docs/Installation.rst:11 <paragraph>
                       > (0,0,0,0,5) list item paragraph
                         (0,0,0,0,2) body
                    MixedStyledText('Inside the opslog folder run the...')
                      SingleStyledText('Inside the opslog folder run the...')
                  StaticGroupedFlowables(style='block quote')   None:None <block_quote>
                       > (0,0,1,0,1) block quote
                    List(style='bulleted')   /home/assessor/working_dir/python_projects/opslog/docs/Installation.rst:13 <bullet_list>
                         > (0,0,1,0,2) bulleted list
                      ListItem()
                           x (0,0,1,0,4) bulleted list item
                           > fallback to default style
                        ListItemLabel('•')
                             > (0,0,1,0,6) bulleted list item label
                               (0,0,0,0,2) list item label
                            MixedStyledText('•')
                              SingleStyledText('')
                              SingleStyledText('•')
                              SingleStyledText('')
                        StaticGroupedFlowables()   None:None <list_item>
                             > (0,0,0,0,3) list item body
                          Paragraph('Example: sudo ./opslog_installer')   /home/assessor/working_dir/python_projects/opslog/docs/Installation.rst:13 <paragraph>
                               > (0,0,0,0,5) list item paragraph
                                 (0,0,0,0,2) body
                            MixedStyledText('Example: sudo ./opslog_installer')
                              SingleStyledText('Example: ')
                              MixedStyledText('sudo ./opslog_installer', style='monospaced')   None:None <literal>
                                   > (0,0,1,0,1) monospaced
                                SingleStyledText('sudo ./opslog_installer')
              ListItem()
                   x (0,0,1,0,4) enumerated list item
                   > fallback to default style
                ListItemLabel('3.')
                     > (0,0,1,0,6) enumerated list item label
                       (0,0,0,0,2) list item label
                    MixedStyledText('3.')
                      SingleStyledText('3')
                      SingleStyledText('.')
                StaticGroupedFlowables()   /home/assessor/working_dir/python_projects/opslog/docs/Installation.rst:None <list_item>
                     > (0,0,0,0,3) list item body
                  Paragraph('Follow the prompts to complete i...')   /home/assessor/working_dir/python_projects/opslog/docs/Installation.rst:15 <paragraph>
                       > (0,0,0,0,5) list item paragraph
                         (0,0,0,0,2) body
                    MixedStyledText('Follow the prompts to complete i...')
                      SingleStyledText('Follow the prompts to complete i...')
#### DownExpandingContainer('footer')
  Footer('		1')
       > (0,0,0,0,2) footer
         (0,0,0,0,1) body
    MixedStyledText('		1')
      Tab('	')
      Tab('	')
      Field('1')
        SingleStyledText('1')
---------------------------------- page 2 ----------------------------------
#### ChainedContainer('column1')
  (continued) DocumentTree()
    (continued) StaticGroupedFlowables()   /home/assessor/working_dir/python_projects/opslog/docs/index.rst:0 <compound>
      (continued) StaticGroupedFlowables(id='%Installation')   None:None <start_of_file>
        (continued) Section(id='%Installation#overview-on-how-to-install-and-setup-this-script')   /home/assessor/working_dir/python_projects/opslog/docs/Installation.rst:4 <section>
             > (0,0,0,1,2) chapter
          (continued) Section(id='%Installation#simple-installation-upgrade')   /home/assessor/working_dir/python_projects/opslog/docs/Installation.rst:7 <section>
            (continued) List(style='enumerated')   /home/assessor/working_dir/python_projects/opslog/docs/Installation.rst:9 <enumerated_list>
                 > (0,0,1,0,2) enumerated list
              ListItem()
                   x (0,0,1,0,4) enumerated list item
                   > fallback to default style
                ListItemLabel('4.')
                     > (0,0,1,0,6) enumerated list item label
                       (0,0,0,0,2) list item label
                    MixedStyledText('4.')
                      SingleStyledText('4')
                      SingleStyledText('.')
                StaticGroupedFlowables()   /home/assessor/working_dir/python_projects/opslog/docs/Installation.rst:None <list_item>
                     > (0,0,0,0,3) list item body
                  Paragraph('If installing, restart terminal ...')   /home/assessor/working_dir/python_projects/opslog/docs/Installation.rst:17 <paragraph>
                       > (0,0,0,0,5) list item paragraph
                         (0,0,0,0,2) body
                    MixedStyledText('If installing, restart terminal ...')
                      SingleStyledText('If installing, restart terminal ...')
                      MixedStyledText('opslog', style='monospaced')   None:None <literal>
                           > (0,0,1,0,1) monospaced
                        SingleStyledText('opslog')
                  StaticGroupedFlowables(style='block quote')   None:None <block_quote>
                       > (0,0,1,0,1) block quote
                    List(style='bulleted')   /home/assessor/working_dir/python_projects/opslog/docs/Installation.rst:19 <bullet_list>
                         > (0,0,1,0,2) bulleted list
                      ListItem()
                           x (0,0,1,0,4) bulleted list item
                           > fallback to default style
                        ListItemLabel('•')
                             > (0,0,1,0,6) bulleted list item label
                               (0,0,0,0,2) list item label
                            MixedStyledText('•')
                              SingleStyledText('')
                              SingleStyledText('•')
                              SingleStyledText('')
                        StaticGroupedFlowables()   None:None <list_item>
                             > (0,0,0,0,3) list item body
                          Paragraph('If the opslog program help is di...')   /home/assessor/working_dir/python_projects/opslog/docs/Installation.rst:19 <paragraph>
                               > (0,0,0,0,5) list item paragraph
                                 (0,0,0,0,2) body
                            MixedStyledText('If the opslog program help is di...')
                              SingleStyledText('If the opslog program help is di...')
                      ListItem()
                           x (0,0,1,0,4) bulleted list item
                           > fallback to default style
                        ListItemLabel('•')
                             > (0,0,1,0,6) bulleted list item label
                               (0,0,0,0,2) list item label
                            MixedStyledText('•')
                              SingleStyledText('')
                              SingleStyledText('•')
                              SingleStyledText('')
                        StaticGroupedFlowables()   None:None <list_item>
                             > (0,0,0,0,3) list item body
                          Paragraph('The original folder can now be r...')   /home/assessor/working_dir/python_projects/opslog/docs/Installation.rst:20 <paragraph>
                               > (0,0,0,0,5) list item paragraph
                                 (0,0,0,0,2) body
                            MixedStyledText('The original folder can now be r...')
                              SingleStyledText('The original folder can now be r...')
          Section(id='%Installation#install-location')   /home/assessor/working_dir/python_projects/opslog/docs/Installation.rst:26 <section>
            Heading('1.2 Install Location')   /home/assessor/working_dir/python_projects/opslog/docs/Installation.rst:26 <title>
                 > (0,0,0,1,2) heading level 2
                   (0,0,0,0,2) other heading levels
                MixedStyledText('1.2 Install Location')
                  SingleStyledText('1.2')
                  SingleStyledText(' ')
                  SingleStyledText('Install Location')
            Paragraph('opslog is installed to the /usr/...')   /home/assessor/working_dir/python_projects/opslog/docs/Installation.rst:28 <paragraph>
                 > (0,0,0,0,2) body
              MixedStyledText('opslog is installed to the /usr/...')
                SingleStyledText('opslog is installed to the /usr/...')
            Paragraph('Inside the ops_log/ folder are t...')   /home/assessor/working_dir/python_projects/opslog/docs/Installation.rst:34 <paragraph>
                 > (0,0,0,0,2) body
              MixedStyledText('Inside the ops_log/ folder are t...')
                SingleStyledText('Inside the ops_log/ folder are t...')
            Paragraph('Below is an sample directory lis...')   /home/assessor/working_dir/python_projects/opslog/docs/Installation.rst:41 <paragraph>
                 > (0,0,0,0,2) body
              MixedStyledText('Below is an sample directory lis...')
                SingleStyledText('Below is an sample directory lis...')
            CodeBlock('/usr/lib/:\ntotal 595256\n....\ndrw...')   /home/assessor/working_dir/python_projects/opslog/docs/Installation.rst:43 <literal_block>
                 > (1,0,0,0,2) code block
                   (0,0,0,0,1) body
              Token('/', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('usr', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('/', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('lib', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('/', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token(':', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('\n', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('total', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('595256', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token('\n', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('....', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('\n', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('drwsrwxrwx', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('  ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('3', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('root', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('root', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('     ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('4096', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('Apr', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('29', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('13', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(':', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('16', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('ops_log', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('\n', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('...', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('\n\n', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('/', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('usr', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('/', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('lib', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('/', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('ops_log', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('/', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token(':', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('\n', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('total', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('8', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token('\n', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('-', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('rw', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('-', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('rw', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('-', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('rw', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('-', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('1', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('root', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('root', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('   ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('54', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('Apr', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('29', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('10', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(':', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('49', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('config', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('.', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('ini', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('\n', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('drwxrwxr', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('-', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('x', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('4', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('root', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('root', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('  ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('4096', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('Apr', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('29', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('15', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(':', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('35', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('help', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('\n', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('drwsrwxrwx', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('2', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('root', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('root', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('4096', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('Apr', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('29', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('10', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(':', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('50', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('operator_logs', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('\n', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('-', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('rwxrwxr', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('-', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('x', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('1', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('root', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('root', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('15216', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('Apr', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('29', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('15', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(':', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('47', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('opslog', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('\n\n', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('/', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('usr', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('/', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('lib', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('/', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('ops_log', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('/', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('operator_logs', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(':', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('\n', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('total', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('4', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token('\n', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('-', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('rw', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('-', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('r', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('--', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('r', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('--', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('1', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('assessor', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('assessor', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('616', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('Apr', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('29', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('10', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(':', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('51', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('test_operator_ops_log', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('.', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('csv', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('\n', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('-', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('rw', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('-', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('r', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('--', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('r', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('--', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('1', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('assessor', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('assessor', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('486', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('Apr', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('29', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('10', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(':', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('57', type=Token.Literal.Number.Integer)
                   > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('second_operator_ops_log', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('.', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('csv', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('\n', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
          Section(id='%Installation#post-install')   /home/assessor/working_dir/python_projects/opslog/docs/Installation.rst:63 <section>
            Heading('1.3 Post Install')   /home/assessor/working_dir/python_projects/opslog/docs/Installation.rst:63 <title>
                 > (0,0,0,1,2) heading level 2
                   (0,0,0,0,2) other heading levels
                MixedStyledText('1.3 Post Install')
                  SingleStyledText('1.3')
                  SingleStyledText(' ')
                  SingleStyledText('Post Install')
            Paragraph('Once the initial installation is...')   /home/assessor/working_dir/python_projects/opslog/docs/Installation.rst:65 <paragraph>
                 > (0,0,0,0,2) body
              MixedStyledText('Once the initial installation is...')
                SingleStyledText('Once the initial installation is...')
            Paragraph('If for any reason this does not ...')   /home/assessor/working_dir/python_projects/opslog/docs/Installation.rst:69 <paragraph>
                 > (0,0,0,0,2) body
              MixedStyledText('If for any reason this does not ...')
                SingleStyledText('If for any reason this does not ...')
            CodeBlock('alias opslog='/usr/lib/ops_log/o...')   /home/assessor/working_dir/python_projects/opslog/docs/Installation.rst:72 <literal_block>
                 > (1,0,0,0,2) code block
                   (0,0,0,0,1) body
              Token('alias', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('opslog', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('=', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token(''/usr/lib/ops_log/opslog'', type=Token.Literal.String.Single)
                   > (0,0,0,1,2) (pygments)Token.Literal.String.Single
              Token('\n', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
            Paragraph('in their .bashrc file found in t...')   /home/assessor/working_dir/python_projects/opslog/docs/Installation.rst:74 <paragraph>
                 > (0,0,0,0,2) body
              MixedStyledText('in their .bashrc file found in t...')
                SingleStyledText('in their .bashrc file found in t...')
            Paragraph('A man page is created for the pr...')   /home/assessor/working_dir/python_projects/opslog/docs/Installation.rst:77 <paragraph>
                 > (0,0,0,0,2) body
              MixedStyledText('A man page is created for the pr...')
                SingleStyledText('A man page is created for the pr...')
            CodeBlock('man opslog\n')   /home/assessor/working_dir/python_projects/opslog/docs/Installation.rst:79 <literal_block>
                 > (1,0,0,0,2) code block
                   (0,0,0,0,1) body
              Token('man', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('opslog', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('\n', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
#### UpExpandingContainer('header')
  Header('OpsLog Documentation, Release v1...')
       > (0,0,0,0,2) header
         (0,0,0,0,1) body
    MixedStyledText('OpsLog Documentation, Release v1...')
      Field('OpsLog Documentation')
        SingleStyledText('OpsLog Documentation')
      SingleStyledText(', ')
      Field('Release v1.8 May, 2019')
        SingleStyledText('Release v1.8 May, 2019')
#### DownExpandingContainer('footer')
  Footer('2		Chapter 1.  Overview on How t...')
       > (0,0,0,0,2) footer
         (0,0,0,0,1) body
    MixedStyledText('2		Chapter 1.  Overview on How t...')
      Field('2')
        SingleStyledText('2')
      Tab('	')
      Tab('	')
      StringField('Chapter')
      SingleStyledText(' ')
      Field('1')
        SingleStyledText('1')
      SingleStyledText('.  ')
      Field('Overview on How to Install and s...')
        SingleStyledText('Overview on How to Install and s...')
---------------------------------- page 3 ----------------------------------
#### ChainedContainer('column1')
  (continued) DocumentTree()
    (continued) StaticGroupedFlowables()   /home/assessor/working_dir/python_projects/opslog/docs/index.rst:0 <compound>
      (continued) StaticGroupedFlowables(id='%Installation')   None:None <start_of_file>
        (continued) Section(id='%Installation#overview-on-how-to-install-and-setup-this-script')   /home/assessor/working_dir/python_projects/opslog/docs/Installation.rst:4 <section>
             > (0,0,0,1,2) chapter
          Section(id='%Installation#simple-uninstall')   /home/assessor/working_dir/python_projects/opslog/docs/Installation.rst:83 <section>
            Heading('1.4 Simple Uninstall')   /home/assessor/working_dir/python_projects/opslog/docs/Installation.rst:83 <title>
                 > (0,0,0,1,2) heading level 2
                   (0,0,0,0,2) other heading levels
            List(style='enumerated')   /home/assessor/working_dir/python_projects/opslog/docs/Installation.rst:85 <enumerated_list>
                 > (0,0,1,0,2) enumerated list
              ListItem()
                   x (0,0,1,0,4) enumerated list item
                   > fallback to default style
                ListItemLabel('1.')
                     > (0,0,1,0,6) enumerated list item label
                       (0,0,0,0,2) list item label
                    MixedStyledText('1.')
                      SingleStyledText('1')
                      SingleStyledText('.')
                StaticGroupedFlowables()   /home/assessor/working_dir/python_projects/opslog/docs/Installation.rst:None <list_item>
                     > (0,0,0,0,3) list item body
                  Paragraph('Ensure all log file are backed u...')   /home/assessor/working_dir/python_projects/opslog/docs/Installation.rst:85 <paragraph>
                       > (0,0,0,0,5) list item paragraph
                         (0,0,0,0,2) body
                    MixedStyledText('Ensure all log file are backed u...')
                      SingleStyledText('Ensure all log file are backed u...')
                  StaticGroupedFlowables(style='block quote')   None:None <block_quote>
                       > (0,0,1,0,1) block quote
                    List(style='bulleted')   /home/assessor/working_dir/python_projects/opslog/docs/Installation.rst:87 <bullet_list>
                         > (0,0,1,0,2) bulleted list
                      ListItem()
                           x (0,0,1,0,4) bulleted list item
                           > fallback to default style
                        ListItemLabel('•')
                             > (0,0,1,0,6) bulleted list item label
                               (0,0,0,0,2) list item label
                            MixedStyledText('•')
                              SingleStyledText('')
                              SingleStyledText('•')
                              SingleStyledText('')
                        StaticGroupedFlowables()   None:None <list_item>
                             > (0,0,0,0,3) list item body
                          Paragraph('Example: opslog --export ~/Deskt...')   /home/assessor/working_dir/python_projects/opslog/docs/Installation.rst:87 <paragraph>
                               > (0,0,0,0,5) list item paragraph
                                 (0,0,0,0,2) body
                            MixedStyledText('Example: opslog --export ~/Deskt...')
                              SingleStyledText('Example: ')
                              MixedStyledText('opslog --export ~/Desktop/log_ba...', style='monospaced')   None:None <literal>
                                   > (0,0,1,0,1) monospaced
                                SingleStyledText('opslog --export ~/Desktop/log_ba...')
                      ListItem()
                           x (0,0,1,0,4) bulleted list item
                           > fallback to default style
                        ListItemLabel('•')
                             > (0,0,1,0,6) bulleted list item label
                               (0,0,0,0,2) list item label
                            MixedStyledText('•')
                              SingleStyledText('')
                              SingleStyledText('•')
                              SingleStyledText('')
                        StaticGroupedFlowables()   None:None <list_item>
                             > (0,0,0,0,3) list item body
                          Paragraph('Example: cp /usr/lib/ops_log/ope...')   /home/assessor/working_dir/python_projects/opslog/docs/Installation.rst:89 <paragraph>
                               > (0,0,0,0,5) list item paragraph
                                 (0,0,0,0,2) body
                            MixedStyledText('Example: cp /usr/lib/ops_log/ope...')
                              SingleStyledText('Example: ')
                              MixedStyledText('cp /usr/lib/ops_log/operator_log...', style='monospaced')   None:None <literal>
                                   > (0,0,1,0,1) monospaced
                                SingleStyledText('cp /usr/lib/ops_log/operator_log...')
              ListItem()
                   x (0,0,1,0,4) enumerated list item
                   > fallback to default style
                ListItemLabel('2.')
                     > (0,0,1,0,6) enumerated list item label
                       (0,0,0,0,2) list item label
                    MixedStyledText('2.')
                      SingleStyledText('2')
                      SingleStyledText('.')
                StaticGroupedFlowables()   /home/assessor/working_dir/python_projects/opslog/docs/Installation.rst:None <list_item>
                     > (0,0,0,0,3) list item body
                  Paragraph('Run the following commands to re...')   /home/assessor/working_dir/python_projects/opslog/docs/Installation.rst:91 <paragraph>
                       > (0,0,0,0,5) list item paragraph
                         (0,0,0,0,2) body
                    MixedStyledText('Run the following commands to re...')
                      SingleStyledText('Run the following commands to re...')
                  StaticGroupedFlowables(style='block quote')   None:None <block_quote>
                       > (0,0,1,0,1) block quote
                    List(style='bulleted')   /home/assessor/working_dir/python_projects/opslog/docs/Installation.rst:93 <bullet_list>
                         > (0,0,1,0,2) bulleted list
                      ListItem()
                           x (0,0,1,0,4) bulleted list item
                           > fallback to default style
                        ListItemLabel('•')
                             > (0,0,1,0,6) bulleted list item label
                               (0,0,0,0,2) list item label
                            MixedStyledText('•')
                              SingleStyledText('')
                              SingleStyledText('•')
                              SingleStyledText('')
                        StaticGroupedFlowables()   None:None <list_item>
                             > (0,0,0,0,3) list item body
                          Paragraph('sudo rm -rf /usr/lib/ops_log/')   /home/assessor/working_dir/python_projects/opslog/docs/Installation.rst:93 <paragraph>
                               > (0,0,0,0,5) list item paragraph
                                 (0,0,0,0,2) body
                            MixedStyledText('sudo rm -rf /usr/lib/ops_log/')
                              MixedStyledText('sudo rm -rf /usr/lib/ops_log/', style='monospaced')   None:None <literal>
                                   > (0,0,1,0,1) monospaced
                                SingleStyledText('sudo rm -rf /usr/lib/ops_log/')
                      ListItem()
                           x (0,0,1,0,4) bulleted list item
                           > fallback to default style
                        ListItemLabel('•')
                             > (0,0,1,0,6) bulleted list item label
                               (0,0,0,0,2) list item label
                            MixedStyledText('•')
                              SingleStyledText('')
                              SingleStyledText('•')
                              SingleStyledText('')
                        StaticGroupedFlowables()   None:None <list_item>
                             > (0,0,0,0,3) list item body
                          Paragraph('sudo rm /etc/profile.d/opslog_al...')   /home/assessor/working_dir/python_projects/opslog/docs/Installation.rst:95 <paragraph>
                               > (0,0,0,0,5) list item paragraph
                                 (0,0,0,0,2) body
                            MixedStyledText('sudo rm /etc/profile.d/opslog_al...')
                              MixedStyledText('sudo rm /etc/profile.d/opslog_al...', style='monospaced')   None:None <literal>
                                   > (0,0,1,0,1) monospaced
                                SingleStyledText('sudo rm /etc/profile.d/opslog_al...')
                      ListItem()
                           x (0,0,1,0,4) bulleted list item
                           > fallback to default style
                        ListItemLabel('•')
                             > (0,0,1,0,6) bulleted list item label
                               (0,0,0,0,2) list item label
                            MixedStyledText('•')
                              SingleStyledText('')
                              SingleStyledText('•')
                              SingleStyledText('')
                        StaticGroupedFlowables()   None:None <list_item>
                             > (0,0,0,0,3) list item body
                          Paragraph('sudo /usr/share/man/man1/opslog....')   /home/assessor/working_dir/python_projects/opslog/docs/Installation.rst:97 <paragraph>
                               > (0,0,0,0,5) list item paragraph
                                 (0,0,0,0,2) body
                            MixedStyledText('sudo /usr/share/man/man1/opslog....')
                              MixedStyledText('sudo /usr/share/man/man1/opslog....', style='monospaced')   None:None <literal>
                                   > (0,0,1,0,1) monospaced
                                SingleStyledText('sudo /usr/share/man/man1/opslog....')
              ListItem()
                   x (0,0,1,0,4) enumerated list item
                   > fallback to default style
                ListItemLabel('3.')
                     > (0,0,1,0,6) enumerated list item label
                       (0,0,0,0,2) list item label
                    MixedStyledText('3.')
                      SingleStyledText('3')
                      SingleStyledText('.')
                StaticGroupedFlowables()   /home/assessor/working_dir/python_projects/opslog/docs/Installation.rst:None <list_item>
                     > (0,0,0,0,3) list item body
                  Paragraph('Restart terminal')   /home/assessor/working_dir/python_projects/opslog/docs/Installation.rst:99 <paragraph>
                       > (0,0,0,0,5) list item paragraph
                         (0,0,0,0,2) body
                    MixedStyledText('Restart terminal')
                      SingleStyledText('Restart terminal')
                  StaticGroupedFlowables(style='block quote')   None:None <block_quote>
                       > (0,0,1,0,1) block quote
                    List(style='bulleted')   /home/assessor/working_dir/python_projects/opslog/docs/Installation.rst:101 <bullet_list>
                         > (0,0,1,0,2) bulleted list
                      ListItem()
                           x (0,0,1,0,4) bulleted list item
                           > fallback to default style
                        ListItemLabel('•')
                             > (0,0,1,0,6) bulleted list item label
                               (0,0,0,0,2) list item label
                            MixedStyledText('•')
                              SingleStyledText('')
                              SingleStyledText('•')
                              SingleStyledText('')
                        StaticGroupedFlowables()   None:None <list_item>
                             > (0,0,0,0,3) list item body
                          Paragraph('The opslog program is now uninst...')   /home/assessor/working_dir/python_projects/opslog/docs/Installation.rst:101 <paragraph>
                               > (0,0,0,0,5) list item paragraph
                                 (0,0,0,0,2) body
                            MixedStyledText('The opslog program is now uninst...')
                              SingleStyledText('The opslog program is now uninst...')
      StaticGroupedFlowables(id='%Usage')   None:None <start_of_file>
        Section(id='%Usage#opslog-usage')   /home/assessor/working_dir/python_projects/opslog/docs/Usage.rst:2 <section>
             > (0,0,0,1,2) chapter
          Heading('2 Opslog Usage')   /home/assessor/working_dir/python_projects/opslog/docs/Usage.rst:2 <title>
               > (0,0,0,1,2) heading level 1
                 (0,0,0,0,2) other heading levels
              MixedStyledText('2 Opslog Usage')
                SingleStyledText('2')
                SingleStyledText(' ')
                SingleStyledText('Opslog Usage')
          Paragraph('This script is used to fill in o...')   /home/assessor/working_dir/python_projects/opslog/docs/Usage.rst:4 <paragraph>
               > (0,0,0,0,2) body
            MixedStyledText('This script is used to fill in o...')
              SingleStyledText('This script is used to fill in o...')
          Section(id='%Usage#basic-info')   /home/assessor/working_dir/python_projects/opslog/docs/Usage.rst:11 <section>
            Heading('2.1 Basic Info')   /home/assessor/working_dir/python_projects/opslog/docs/Usage.rst:11 <title>
                 > (0,0,0,1,2) heading level 2
                   (0,0,0,0,2) other heading levels
                MixedStyledText('2.1 Basic Info')
                  SingleStyledText('2.1')
                  SingleStyledText(' ')
                  SingleStyledText('Basic Info')
            Paragraph('The basic usage and flags:')   /home/assessor/working_dir/python_projects/opslog/docs/Usage.rst:13 <paragraph>
                 > (0,0,0,0,2) body
              MixedStyledText('The basic usage and flags:')
                SingleStyledText('The basic usage and flags:')
            CodeBlock('opslog.py [-h | -v | -o | -lo | ...')   /home/assessor/working_dir/python_projects/opslog/docs/Usage.rst:15 <literal_block>
                 > (1,0,0,0,2) code block
                   (0,0,0,0,1) body
              Token('opslog', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('.', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('py', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('[', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('-', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('h', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('|', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('-', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('v', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('|', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('-', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('o', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('|', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('-', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('lo', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('|', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('-', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('so', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('operator', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(']', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('[', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('-', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('p', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('#] [-i a.b.c.d/f]', type=Token.Comment.Single)
                   > (0,0,0,1,2) (pygments)Token.Comment.Single
              Token('\n             ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('[', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('-', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('C', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token(''Command'', type=Token.Literal.String.Single)
                   > (0,0,0,1,2) (pygments)Token.Literal.String.Single
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('|', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('-', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('c', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token(''Command'', type=Token.Literal.String.Single)
                   > (0,0,0,1,2) (pygments)Token.Literal.String.Single
              Token(']', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('[', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('-', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('n', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token(''text'', type=Token.Literal.String.Single)
                   > (0,0,0,1,2) (pygments)Token.Literal.String.Single
              Token(']', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('\n             ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('[', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('-', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('f', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('Flag', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('[', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('Flag', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('...', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token(']]', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('[', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('--', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('cat', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('|', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('-', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('lf', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('|', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('-', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('sf', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('Flag', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('[', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('Flag', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('...', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token(']]', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('\n', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
          Section(id='%Usage#log-file-syntax')   /home/assessor/working_dir/python_projects/opslog/docs/Usage.rst:21 <section>
            Heading('2.2 Log File Syntax')   /home/assessor/working_dir/python_projects/opslog/docs/Usage.rst:21 <title>
                 > (0,0,0,1,2) heading level 2
                   (0,0,0,0,2) other heading levels
                MixedStyledText('2.2 Log File Syntax')
                  SingleStyledText('2.2')
                  SingleStyledText(' ')
                  SingleStyledText('Log File Syntax')
            Paragraph('The log file for each operator i...')   /home/assessor/working_dir/python_projects/opslog/docs/Usage.rst:23 <paragraph>
                 > (0,0,0,0,2) body
              MixedStyledText('The log file for each operator i...')
                SingleStyledText('The log file for each operator i...')
            CodeBlock('date;operator name;flag;paa;ip a...')   /home/assessor/working_dir/python_projects/opslog/docs/Usage.rst:26 <literal_block>
                 > (1,0,0,0,2) code block
                   (0,0,0,0,1) body
              Token('date', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(';', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('operator', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('name', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(';', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('flag', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(';', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('paa', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(';', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('ip', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('address', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(';', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('command', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(';', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('executed', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(';', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('note', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('\n', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
            Paragraph('The eight fields are:')   /home/assessor/working_dir/python_projects/opslog/docs/Usage.rst:28 <paragraph>
                 > (0,0,0,0,2) body
              MixedStyledText('The eight fields are:')
                SingleStyledText('The eight fields are:')
            CodeBlock('- Date:     The date and time th...')   /home/assessor/working_dir/python_projects/opslog/docs/Usage.rst:30 <literal_block>
                 > (1,0,0,0,2) code block
                   (0,0,0,0,1) body
              Token('-', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('Date', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(':', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('     ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('The', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('date', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('and', type=Token.Operator.Word)
                   > (0,0,0,1,2) (pygments)Token.Operator.Word
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('time', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('the', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('entry', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('was', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('made', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('in', type=Token.Operator.Word)
                   > (0,0,0,1,2) (pygments)Token.Operator.Word
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('UTC', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('timezone', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('\n    ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('-', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('YYYY', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('-', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('MM', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('-', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('DD', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('HH', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(':', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('MM', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(':', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('SS', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('\n', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('-', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('Operator', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(':', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('The', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('operator', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('who', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('made', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('the', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('entry', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('\n', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('-', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('Flag', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(':', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('     ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('Tags', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('used', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('in', type=Token.Operator.Word)
                   > (0,0,0,1,2) (pygments)Token.Operator.Word
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('a', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('log', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('entry', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('.', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('These', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('can', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('be', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('used', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('later', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('for', type=Token.Keyword)
                   > (0,0,0,1,2) (pygments)Token.Keyword
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('searching', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('or', type=Token.Operator.Word)
                   > (0,0,0,1,2) (pygments)Token.Operator.Word
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('catagorizing', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('entries', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('\n', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('-', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('PAA', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(':', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('      ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('The', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('pre', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('-', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('approved', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('action', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('number', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('.', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('This', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('is', type=Token.Operator.Word)
                   > (0,0,0,1,2) (pygments)Token.Operator.Word
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('dependant', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('on', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('mission', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('and', type=Token.Operator.Word)
                   > (0,0,0,1,2) (pygments)Token.Operator.Word
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('crew', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('lead', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('\n', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
#### UpExpandingContainer('header')
  Header('		OpsLog Documentation, Release ...')
       > (0,0,0,0,2) header
         (0,0,0,0,1) body
    MixedStyledText('		OpsLog Documentation, Release ...')
      Tab('	')
      Tab('	')
      Field('OpsLog Documentation')
        SingleStyledText('OpsLog Documentation')
      SingleStyledText(', ')
      Field('Release v1.8 May, 2019')
        SingleStyledText('Release v1.8 May, 2019')
#### DownExpandingContainer('footer')
  Footer('1.4.  Simple Uninstall		3')
       > (0,0,0,0,2) footer
         (0,0,0,0,1) body
    MixedStyledText('1.4.  Simple Uninstall		3')
      Field('1.4')
        SingleStyledText('1.4')
      SingleStyledText('.  ')
      Field('Simple Uninstall')
        SingleStyledText('Simple Uninstall')
      Tab('	')
      Tab('	')
      Field('3')
        SingleStyledText('3')
---------------------------------- page 4 ----------------------------------
#### ChainedContainer('column1')
  (continued) DocumentTree()
    (continued) StaticGroupedFlowables()   /home/assessor/working_dir/python_projects/opslog/docs/index.rst:0 <compound>
      (continued) StaticGroupedFlowables(id='%Usage')   None:None <start_of_file>
        (continued) Section(id='%Usage#opslog-usage')   /home/assessor/working_dir/python_projects/opslog/docs/Usage.rst:2 <section>
             > (0,0,0,1,2) chapter
          (continued) Section(id='%Usage#log-file-syntax')   /home/assessor/working_dir/python_projects/opslog/docs/Usage.rst:21 <section>
            (continued) CodeBlock('- Date:     The date and time th...')   /home/assessor/working_dir/python_projects/opslog/docs/Usage.rst:30 <literal_block>
                 > (1,0,0,0,2) code block
                   (0,0,0,0,1) body
          Section(id='%Usage#administration-arguments')   /home/assessor/working_dir/python_projects/opslog/docs/Usage.rst:44 <section>
            Heading('2.3 Administration Arguments')   /home/assessor/working_dir/python_projects/opslog/docs/Usage.rst:44 <title>
                 > (0,0,0,1,2) heading level 2
                   (0,0,0,0,2) other heading levels
                MixedStyledText('2.3 Administration Arguments')
                  SingleStyledText('2.3')
                  SingleStyledText(' ')
                  SingleStyledText('Administration Arguments')
            Paragraph('The following arguments are mutu...')   /home/assessor/working_dir/python_projects/opslog/docs/Usage.rst:46 <paragraph>
                 > (0,0,0,0,2) body
              MixedStyledText('The following arguments are mutu...')
                SingleStyledText('The following arguments are mutu...')
            Paragraph('The admin arguments are:')   /home/assessor/working_dir/python_projects/opslog/docs/Usage.rst:50 <paragraph>
                 > (0,0,0,0,2) body
              MixedStyledText('The admin arguments are:')
                SingleStyledText('The admin arguments are:')
            CodeBlock('-h, --help            show this ...')   /home/assessor/working_dir/python_projects/opslog/docs/Usage.rst:52 <literal_block>
                 > (1,0,0,0,2) code block
                   (0,0,0,0,1) body
              Token('-', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('h', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(',', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('--', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('help', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('            ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('show', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('this', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('help', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('message', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('and', type=Token.Operator.Word)
                   > (0,0,0,1,2) (pygments)Token.Operator.Word
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('exit', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('\n', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('-', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('v', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(',', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('--', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('version', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('         ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('Show', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('program', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('version', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('information', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('\n', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('-', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('o', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(',', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('--', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('operator', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('        ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('Show', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('the', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('current', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('operator', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('\n', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('-', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('lo', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('                   ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('List', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('all', type=Token.Name.Builtin)
                   > (0,0,0,1,2) (pygments)Token.Name.Builtin
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('operators', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('\n', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('-', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('so', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('operator', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(',', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('\n ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('--', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('set', type=Token.Name.Builtin)
                   > (0,0,0,1,2) (pygments)Token.Name.Builtin
              Token('-', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('operator', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('operator', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('\n                      ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('Set', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('the', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('current', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('operator', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('\n', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
            Paragraph('Most useful are the -o and -so a...')   /home/assessor/working_dir/python_projects/opslog/docs/Usage.rst:60 <paragraph>
                 > (0,0,0,0,2) body
              MixedStyledText('Most useful are the -o and -so a...')
                SingleStyledText('Most useful are the -o and -so a...')
          Section(id='%Usage#management-arguments')   /home/assessor/working_dir/python_projects/opslog/docs/Usage.rst:64 <section>
            Heading('2.4 Management Arguments')   /home/assessor/working_dir/python_projects/opslog/docs/Usage.rst:64 <title>
                 > (0,0,0,1,2) heading level 2
                   (0,0,0,0,2) other heading levels
                MixedStyledText('2.4 Management Arguments')
                  SingleStyledText('2.4')
                  SingleStyledText(' ')
                  SingleStyledText('Management Arguments')
            Paragraph('The following arguments are used...')   /home/assessor/working_dir/python_projects/opslog/docs/Usage.rst:66 <paragraph>
                 > (0,0,0,0,2) body
              MixedStyledText('The following arguments are used...')
                SingleStyledText('The following arguments are used...')
            Paragraph('The management arguments are:')   /home/assessor/working_dir/python_projects/opslog/docs/Usage.rst:69 <paragraph>
                 > (0,0,0,0,2) body
              MixedStyledText('The management arguments are:')
                SingleStyledText('The management arguments are:')
            CodeBlock('--export FILE         Export the...')   /home/assessor/working_dir/python_projects/opslog/docs/Usage.rst:71 <literal_block>
                 > (1,0,0,0,2) code block
                   (0,0,0,0,1) body
              Token('--', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('export', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('FILE', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('         ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('Export', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('the', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('current', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('log', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('\n', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('--', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('format', type=Token.Name.Builtin)
                   > (0,0,0,1,2) (pygments)Token.Name.Builtin
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('FILETYPE', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('     ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('Format', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('to', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('use', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('when', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('exporting', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('the', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('log', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('(', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('csv', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(',', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('json', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(',', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('or', type=Token.Operator.Word)
                   > (0,0,0,1,2) (pygments)Token.Operator.Word
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('default', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(')', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('\n', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('--', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('merge', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('File1', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('File2', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('   ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('Merge', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('multiple', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('log', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('files', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('together', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('into', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('one', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('\n', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
            List(style='bulleted')   /home/assessor/working_dir/python_projects/opslog/docs/Usage.rst:75 <bullet_list>
                 > (0,0,1,0,2) bulleted list
              ListItem()
                   x (0,0,1,0,4) bulleted list item
                   > fallback to default style
                ListItemLabel('•')
                     > (0,0,1,0,6) bulleted list item label
                       (0,0,0,0,2) list item label
                    MixedStyledText('•')
                      SingleStyledText('')
                      SingleStyledText('•')
                      SingleStyledText('')
                StaticGroupedFlowables()   /home/assessor/working_dir/python_projects/opslog/docs/Usage.rst:None <list_item>
                     > (0,0,0,0,3) list item body
                  Paragraph('Note 1: The files can be given i...')   /home/assessor/working_dir/python_projects/opslog/docs/Usage.rst:75 <paragraph>
                       > (0,0,0,0,5) list item paragraph
                         (0,0,0,0,2) body
                    MixedStyledText('Note 1: The files can be given i...')
                      SingleStyledText('Note 1: The files can be given i...')
              ListItem()
                   x (0,0,1,0,4) bulleted list item
                   > fallback to default style
                ListItemLabel('•')
                     > (0,0,1,0,6) bulleted list item label
                       (0,0,0,0,2) list item label
                    MixedStyledText('•')
                      SingleStyledText('')
                      SingleStyledText('•')
                      SingleStyledText('')
                StaticGroupedFlowables()   /home/assessor/working_dir/python_projects/opslog/docs/Usage.rst:None <list_item>
                     > (0,0,0,0,3) list item body
                  Paragraph('Note 2: The merge command can ac...')   /home/assessor/working_dir/python_projects/opslog/docs/Usage.rst:77 <paragraph>
                       > (0,0,0,0,5) list item paragraph
                         (0,0,0,0,2) body
                    MixedStyledText('Note 2: The merge command can ac...')
                      SingleStyledText('Note 2: The merge command can ac...')
          Section(id='%Usage#output-arguments')   /home/assessor/working_dir/python_projects/opslog/docs/Usage.rst:80 <section>
            Heading('2.5 Output Arguments')   /home/assessor/working_dir/python_projects/opslog/docs/Usage.rst:80 <title>
                 > (0,0,0,1,2) heading level 2
                   (0,0,0,0,2) other heading levels
                MixedStyledText('2.5 Output Arguments')
                  SingleStyledText('2.5')
                  SingleStyledText(' ')
                  SingleStyledText('Output Arguments')
            Paragraph('The following arguments are mutu...')   /home/assessor/working_dir/python_projects/opslog/docs/Usage.rst:82 <paragraph>
                 > (0,0,0,0,2) body
              MixedStyledText('The following arguments are mutu...')
                SingleStyledText('The following arguments are mutu...')
            Paragraph('The output arguments are:')   /home/assessor/working_dir/python_projects/opslog/docs/Usage.rst:86 <paragraph>
                 > (0,0,0,0,2) body
              MixedStyledText('The output arguments are:')
                SingleStyledText('The output arguments are:')
            CodeBlock('--cat                 Output the...')   /home/assessor/working_dir/python_projects/opslog/docs/Usage.rst:88 <literal_block>
                 > (1,0,0,0,2) code block
                   (0,0,0,0,1) body
              Token('--', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('cat', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('                 ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('Output', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('the', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('current', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('log', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('(', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('can', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('be', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('piped', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('to', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('less', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('/', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('more', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(',', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('\n                      ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('head', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('/', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('tail', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(')', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('\n', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('-', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('lf', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('                   ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('List', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('all', type=Token.Name.Builtin)
                   > (0,0,0,1,2) (pygments)Token.Name.Builtin
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('flags', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('used', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('in', type=Token.Operator.Word)
                   > (0,0,0,1,2) (pygments)Token.Operator.Word
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('current', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('operators', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('log', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('\n', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('-', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('sf', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('Flag', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('[', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('Flag', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('...', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token(']', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('   ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('Search', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('the', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('log', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('entries', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('for', type=Token.Keyword)
                   > (0,0,0,1,2) (pygments)Token.Keyword
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('those', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('tagged', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('with', type=Token.Keyword)
                   > (0,0,0,1,2) (pygments)Token.Keyword
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('Flag', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('(', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('s', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(')', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('\n', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
#### UpExpandingContainer('header')
  Header('OpsLog Documentation, Release v1...')
       > (0,0,0,0,2) header
         (0,0,0,0,1) body
    MixedStyledText('OpsLog Documentation, Release v1...')
      Field('OpsLog Documentation')
        SingleStyledText('OpsLog Documentation')
      SingleStyledText(', ')
      Field('Release v1.8 May, 2019')
        SingleStyledText('Release v1.8 May, 2019')
#### DownExpandingContainer('footer')
  Footer('4		Chapter 2.  Opslog Usage')
       > (0,0,0,0,2) footer
         (0,0,0,0,1) body
    MixedStyledText('4		Chapter 2.  Opslog Usage')
      Field('4')
        SingleStyledText('4')
      Tab('	')
      Tab('	')
      StringField('Chapter')
      SingleStyledText(' ')
      Field('2')
        SingleStyledText('2')
      SingleStyledText('.  ')
      Field('Opslog Usage')
        SingleStyledText('Opslog Usage')
---------------------------------- page 5 ----------------------------------
#### ChainedContainer('column1')
  (continued) DocumentTree()
    (continued) StaticGroupedFlowables()   /home/assessor/working_dir/python_projects/opslog/docs/index.rst:0 <compound>
      (continued) StaticGroupedFlowables(id='%Usage')   None:None <start_of_file>
        (continued) Section(id='%Usage#opslog-usage')   /home/assessor/working_dir/python_projects/opslog/docs/Usage.rst:2 <section>
             > (0,0,0,1,2) chapter
          Section(id='%Usage#logging-arguments')   /home/assessor/working_dir/python_projects/opslog/docs/Usage.rst:97 <section>
            Heading('2.6 Logging Arguments')   /home/assessor/working_dir/python_projects/opslog/docs/Usage.rst:97 <title>
                 > (0,0,0,1,2) heading level 2
                   (0,0,0,0,2) other heading levels
            Paragraph('The following arguments are not ...')   /home/assessor/working_dir/python_projects/opslog/docs/Usage.rst:99 <paragraph>
                 > (0,0,0,0,2) body
              MixedStyledText('The following arguments are not ...')
                SingleStyledText('The following arguments are not ...')
            Paragraph('The logging arguments are:')   /home/assessor/working_dir/python_projects/opslog/docs/Usage.rst:103 <paragraph>
                 > (0,0,0,0,2) body
              MixedStyledText('The logging arguments are:')
                SingleStyledText('The logging arguments are:')
            CodeBlock('-p #                  The pre-ap...')   /home/assessor/working_dir/python_projects/opslog/docs/Usage.rst:105 <literal_block>
                 > (1,0,0,0,2) code block
                   (0,0,0,0,1) body
              Token('-', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('p', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('#                  The pre-appro...', type=Token.Comment.Single)
                   > (0,0,0,1,2) (pygments)Token.Comment.Single
              Token('\n', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('-', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('i', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('a', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('.', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('b', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('.', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('c', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('.', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('d', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('/', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('f', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('          ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('The', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('target', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('ip', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('address', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('/', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('range', type=Token.Name.Builtin)
                   > (0,0,0,1,2) (pygments)Token.Name.Builtin
              Token('\n', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('-', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('C', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token(''Command'', type=Token.Literal.String.Single)
                   > (0,0,0,1,2) (pygments)Token.Literal.String.Single
              Token('          ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('Command', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('syntax', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('to', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('log', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('before', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('executing', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('\n', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('-', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('c', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token(''Command'', type=Token.Literal.String.Single)
                   > (0,0,0,1,2) (pygments)Token.Literal.String.Single
              Token('          ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('Command', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('syntax', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('to', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('log', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('without', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('executing', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('\n', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('-', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('n', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token(''text'', type=Token.Literal.String.Single)
                   > (0,0,0,1,2) (pygments)Token.Literal.String.Single
              Token('             ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('Operator', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('notes', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('to', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('include', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('in', type=Token.Operator.Word)
                   > (0,0,0,1,2) (pygments)Token.Operator.Word
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('the', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('log', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('entry', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('\n', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('-', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token('f', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('Flag', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('[', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('Flag', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('...', type=Token.Operator)
                   > (0,0,0,1,2) (pygments)Token.Operator
              Token(']', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('    ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('Flag', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('(', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token('s', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(')', type=Token.Punctuation)
                   > (0,0,0,1,2) (pygments)Token.Punctuation
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('used', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('to', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('tag', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('the', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('log', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token(' ', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
              Token('entry', type=Token.Name)
                   > (0,0,0,1,2) (pygments)Token.Name
              Token('\n', type=Token.Text)
                   > (0,0,0,1,2) (pygments)Token.Text
            List(style='bulleted')   /home/assessor/working_dir/python_projects/opslog/docs/Usage.rst:112 <bullet_list>
                 > (0,0,1,0,2) bulleted list
              ListItem()
                   x (0,0,1,0,4) bulleted list item
                   > fallback to default style
                ListItemLabel('•')
                     > (0,0,1,0,6) bulleted list item label
                       (0,0,0,0,2) list item label
                    MixedStyledText('•')
                      SingleStyledText('')
                      SingleStyledText('•')
                      SingleStyledText('')
                StaticGroupedFlowables()   /home/assessor/working_dir/python_projects/opslog/docs/Usage.rst:None <list_item>
                     > (0,0,0,0,3) list item body
                  Paragraph('Note 1: When inputting command s...')   /home/assessor/working_dir/python_projects/opslog/docs/Usage.rst:112 <paragraph>
                       > (0,0,0,0,5) list item paragraph
                         (0,0,0,0,2) body
                    MixedStyledText('Note 1: When inputting command s...')
                      SingleStyledText('Note 1: When inputting command s...')
                  StaticGroupedFlowables(style='block quote')   None:None <block_quote>
                       > (0,0,1,0,1) block quote
                    List(style='bulleted')   /home/assessor/working_dir/python_projects/opslog/docs/Usage.rst:114 <bullet_list>
                         > (0,0,1,0,2) bulleted list
                      ListItem()
                           x (0,0,1,0,4) bulleted list item
                           > fallback to default style
                        ListItemLabel('•')
                             > (0,0,1,0,6) bulleted list item label
                               (0,0,0,0,2) list item label
                            MixedStyledText('•')
                              SingleStyledText('')
                              SingleStyledText('•')
                              SingleStyledText('')
                        StaticGroupedFlowables()   None:None <list_item>
                             > (0,0,0,0,3) list item body
                          Paragraph('Note 1 Example:')   /home/assessor/working_dir/python_projects/opslog/docs/Usage.rst:114 <paragraph>
                               > (0,0,0,0,5) list item paragraph
                                 (0,0,0,0,2) body
                            MixedStyledText('Note 1 Example:')
                              SingleStyledText('Note 1 Example:')
                          CodeBlock('>IP='1.2.3.4'\n>opslog -c "ping $...')   /home/assessor/working_dir/python_projects/opslog/docs/Usage.rst:116 <literal_block>
                               > (1,0,0,0,2) code block
                                 (0,0,0,0,4) list item paragraph
                                 (0,0,0,0,1) body
                            SingleStyledText('>IP='1.2.3.4'\n>opslog -c "ping $...')
              ListItem()
                   x (0,0,1,0,4) bulleted list item
                   > fallback to default style
                ListItemLabel('•')
                     > (0,0,1,0,6) bulleted list item label
                       (0,0,0,0,2) list item label
                    MixedStyledText('•')
                      SingleStyledText('')
                      SingleStyledText('•')
                      SingleStyledText('')
                StaticGroupedFlowables()   /home/assessor/working_dir/python_projects/opslog/docs/Usage.rst:None <list_item>
                     > (0,0,0,0,3) list item body
                  Paragraph('Note 2: Flags can be added with ...')   /home/assessor/working_dir/python_projects/opslog/docs/Usage.rst:125 <paragraph>
                       > (0,0,0,0,5) list item paragraph
                         (0,0,0,0,2) body
                    MixedStyledText('Note 2: Flags can be added with ...')
                      SingleStyledText('Note 2: Flags can be added with ...')
      StaticGroupedFlowables(id='%Examples')   None:None <start_of_file>
        Section(id='%Examples#opslog-examples')   /home/assessor/working_dir/python_projects/opslog/docs/Examples.rst:2 <section>
             > (0,0,0,1,2) chapter
          Heading('3 Opslog Examples')   /home/assessor/working_dir/python_projects/opslog/docs/Examples.rst:2 <title>
               > (0,0,0,1,2) heading level 1
                 (0,0,0,0,2) other heading levels
              MixedStyledText('3 Opslog Examples')
                SingleStyledText('3')
                SingleStyledText(' ')
                SingleStyledText('Opslog Examples')
          Section(id='%Examples#displaying-and-changing-the-current-operator')   /home/assessor/working_dir/python_projects/opslog/docs/Examples.rst:5 <section>
            Heading('3.1 Displaying and Changing the ...')   /home/assessor/working_dir/python_projects/opslog/docs/Examples.rst:5 <title>
                 > (0,0,0,1,2) heading level 2
                   (0,0,0,0,2) other heading levels
                MixedStyledText('3.1 Displaying and Changing the ...')
                  SingleStyledText('3.1')
                  SingleStyledText(' ')
                  SingleStyledText('Displaying and Changing the Curr...')
            Paragraph('The current operator is stored i...')   /home/assessor/working_dir/python_projects/opslog/docs/Examples.rst:7 <paragraph>
                 > (0,0,0,0,2) body
              MixedStyledText('The current operator is stored i...')
                SingleStyledText('The current operator is stored i...')
                MixedStyledText('opslog -o', style='monospaced')   None:None <literal>
                     > (0,0,1,0,1) monospaced
                  SingleStyledText('opslog -o')
                SingleStyledText(' command.')
            List(style='bulleted')   /home/assessor/working_dir/python_projects/opslog/docs/Examples.rst:11 <bullet_list>
                 > (0,0,1,0,2) bulleted list
              ListItem()
                   x (0,0,1,0,4) bulleted list item
                   > fallback to default style
                ListItemLabel('•')
                     > (0,0,1,0,6) bulleted list item label
                       (0,0,0,0,2) list item label
                    MixedStyledText('•')
                      SingleStyledText('')
                      SingleStyledText('•')
                      SingleStyledText('')
                StaticGroupedFlowables()   /home/assessor/working_dir/python_projects/opslog/docs/Examples.rst:None <list_item>
                     > (0,0,0,0,3) list item body
                  Paragraph('Example:')   /home/assessor/working_dir/python_projects/opslog/docs/Examples.rst:11 <paragraph>
                       > (0,0,0,0,5) list item paragraph
                         (0,0,0,0,2) body
                    MixedStyledText('Example:')
                      SingleStyledText('Example:')
                  CodeBlock('> opslog -o\ntest_operator\n')   /home/assessor/working_dir/python_projects/opslog/docs/Examples.rst:13 <literal_block>
                       > (1,0,0,0,2) code block
                         (0,0,0,0,4) list item paragraph
                         (0,0,0,0,1) body
                    Token('>', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('opslog', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('-', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('o', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('\n', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('test_operator', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('\n', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
            Paragraph('Whenever the current operator is...')   /home/assessor/working_dir/python_projects/opslog/docs/Examples.rst:16 <paragraph>
                 > (0,0,0,0,2) body
              MixedStyledText('Whenever the current operator is...')
                SingleStyledText('Whenever the current operator is...')
                MixedStyledText('opslog -so', style='monospaced')   None:None <literal>
                     > (0,0,1,0,1) monospaced
                  SingleStyledText('opslog -so')
                SingleStyledText(' command.')
            List(style='bulleted')   /home/assessor/working_dir/python_projects/opslog/docs/Examples.rst:20 <bullet_list>
                 > (0,0,1,0,2) bulleted list
              ListItem()
                   x (0,0,1,0,4) bulleted list item
                   > fallback to default style
                ListItemLabel('•')
                     > (0,0,1,0,6) bulleted list item label
                       (0,0,0,0,2) list item label
                    MixedStyledText('•')
                      SingleStyledText('')
                      SingleStyledText('•')
                      SingleStyledText('')
                StaticGroupedFlowables()   /home/assessor/working_dir/python_projects/opslog/docs/Examples.rst:None <list_item>
                     > (0,0,0,0,3) list item body
                  Paragraph('Example:')   /home/assessor/working_dir/python_projects/opslog/docs/Examples.rst:20 <paragraph>
                       > (0,0,0,0,5) list item paragraph
                         (0,0,0,0,2) body
                    MixedStyledText('Example:')
                      SingleStyledText('Example:')
                  CodeBlock('> opslog -o\ntest_operator\n\n> ops...')   /home/assessor/working_dir/python_projects/opslog/docs/Examples.rst:22 <literal_block>
                       > (1,0,0,0,2) code block
                         (0,0,0,0,4) list item paragraph
                         (0,0,0,0,1) body
                    Token('>', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('opslog', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('-', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('o', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('\n', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('test_operator', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('\n\n', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
#### UpExpandingContainer('header')
  Header('		OpsLog Documentation, Release ...')
       > (0,0,0,0,2) header
         (0,0,0,0,1) body
    MixedStyledText('		OpsLog Documentation, Release ...')
      Tab('	')
      Tab('	')
      Field('OpsLog Documentation')
        SingleStyledText('OpsLog Documentation')
      SingleStyledText(', ')
      Field('Release v1.8 May, 2019')
        SingleStyledText('Release v1.8 May, 2019')
#### DownExpandingContainer('footer')
  Footer('2.6.  Logging Arguments		5')
       > (0,0,0,0,2) footer
         (0,0,0,0,1) body
    MixedStyledText('2.6.  Logging Arguments		5')
      Field('2.6')
        SingleStyledText('2.6')
      SingleStyledText('.  ')
      Field('Logging Arguments')
        SingleStyledText('Logging Arguments')
      Tab('	')
      Tab('	')
      Field('5')
        SingleStyledText('5')
---------------------------------- page 6 ----------------------------------
#### ChainedContainer('column1')
  (continued) DocumentTree()
    (continued) StaticGroupedFlowables()   /home/assessor/working_dir/python_projects/opslog/docs/index.rst:0 <compound>
      (continued) StaticGroupedFlowables(id='%Examples')   None:None <start_of_file>
        (continued) Section(id='%Examples#opslog-examples')   /home/assessor/working_dir/python_projects/opslog/docs/Examples.rst:2 <section>
             > (0,0,0,1,2) chapter
          (continued) Section(id='%Examples#displaying-and-changing-the-current-operator')   /home/assessor/working_dir/python_projects/opslog/docs/Examples.rst:5 <section>
            (continued) List(style='bulleted')   /home/assessor/working_dir/python_projects/opslog/docs/Examples.rst:20 <bullet_list>
                 > (0,0,1,0,2) bulleted list
              (continued) ListItem()
                   x (0,0,1,0,4) bulleted list item
                   > fallback to default style
                (continued) StaticGroupedFlowables()   /home/assessor/working_dir/python_projects/opslog/docs/Examples.rst:None <list_item>
                     > (0,0,0,0,3) list item body
                  (continued) CodeBlock('> opslog -o\ntest_operator\n\n> ops...')   /home/assessor/working_dir/python_projects/opslog/docs/Examples.rst:22 <literal_block>
                       > (1,0,0,0,2) code block
                         (0,0,0,0,4) list item paragraph
                         (0,0,0,0,1) body
          Section(id='%Examples#creating-log-entries')   /home/assessor/working_dir/python_projects/opslog/docs/Examples.rst:30 <section>
            Heading('3.2 Creating Log Entries')   /home/assessor/working_dir/python_projects/opslog/docs/Examples.rst:30 <title>
                 > (0,0,0,1,2) heading level 2
                   (0,0,0,0,2) other heading levels
                MixedStyledText('3.2 Creating Log Entries')
                  SingleStyledText('3.2')
                  SingleStyledText(' ')
                  SingleStyledText('Creating Log Entries')
            Paragraph('Log entires are created by using...')   /home/assessor/working_dir/python_projects/opslog/docs/Examples.rst:32 <paragraph>
                 > (0,0,0,0,2) body
              MixedStyledText('Log entires are created by using...')
                SingleStyledText('Log entires are created by using...')
                MixedStyledText('Logging-Arguments', style='title reference')   None:None <title_reference>
                     > (0,0,1,0,1) title reference
                  SingleStyledText('Logging-Arguments')
                SingleStyledText('. These can be as simple as a ti...')
                MixedStyledText('opslog -n 'note'', style='monospaced')   None:None <literal>
                     > (0,0,1,0,1) monospaced
                  SingleStyledText('opslog -n 'note'')
                SingleStyledText(' command, or as complicated as a...')
            List(style='bulleted')   /home/assessor/working_dir/python_projects/opslog/docs/Examples.rst:36 <bullet_list>
                 > (0,0,1,0,2) bulleted list
              ListItem()
                   x (0,0,1,0,4) bulleted list item
                   > fallback to default style
                ListItemLabel('•')
                     > (0,0,1,0,6) bulleted list item label
                       (0,0,0,0,2) list item label
                    MixedStyledText('•')
                      SingleStyledText('')
                      SingleStyledText('•')
                      SingleStyledText('')
                StaticGroupedFlowables()   /home/assessor/working_dir/python_projects/opslog/docs/Examples.rst:None <list_item>
                     > (0,0,0,0,3) list item body
                  Paragraph('Example 1:')   /home/assessor/working_dir/python_projects/opslog/docs/Examples.rst:36 <paragraph>
                       > (0,0,0,0,5) list item paragraph
                         (0,0,0,0,2) body
                    MixedStyledText('Example 1:')
                      SingleStyledText('Example 1:')
                  CodeBlock('> opslog -n 'This is a simple op...')   /home/assessor/working_dir/python_projects/opslog/docs/Examples.rst:38 <literal_block>
                       > (1,0,0,0,2) code block
                         (0,0,0,0,4) list item paragraph
                         (0,0,0,0,1) body
                    Token('>', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('opslog', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('-', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('n', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token(''This is a simple operator note'', type=Token.Literal.String.Single)
                         > (0,0,0,1,2) (pygments)Token.Literal.String.Single
                    Token('\n', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('>', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('opslog', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('--', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('cat', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('\n\n           ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Date', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('         ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Operator', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('       ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Flag', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('PAA', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('IPs', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Command', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Syntax', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Executed', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('              ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Note', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('\n', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('2019', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token('-', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('04', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token('-', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('30', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('13', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(':', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation
                    Token('44', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(':', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation
                    Token('10', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token('  ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Example', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Operator', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('                                ...', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('This', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('is', type=Token.Operator.Word)
                         > (0,0,0,1,2) (pygments)Token.Operator.Word
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('a', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('simple', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('operator', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('note', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('\n', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
              ListItem()
                   x (0,0,1,0,4) bulleted list item
                   > fallback to default style
                ListItemLabel('•')
                     > (0,0,1,0,6) bulleted list item label
                       (0,0,0,0,2) list item label
                    MixedStyledText('•')
                      SingleStyledText('')
                      SingleStyledText('•')
                      SingleStyledText('')
                StaticGroupedFlowables()   /home/assessor/working_dir/python_projects/opslog/docs/Examples.rst:None <list_item>
                     > (0,0,0,0,3) list item body
                  Paragraph('Example 2:')   /home/assessor/working_dir/python_projects/opslog/docs/Examples.rst:44 <paragraph>
                       > (0,0,0,0,5) list item paragraph
                         (0,0,0,0,2) body
                    MixedStyledText('Example 2:')
                      SingleStyledText('Example 2:')
                  CodeBlock('> opslog -c 'ping 1.2.3.4' -n 'T...')   /home/assessor/working_dir/python_projects/opslog/docs/Examples.rst:46 <literal_block>
                       > (1,0,0,0,2) code block
                         (0,0,0,0,4) list item paragraph
                         (0,0,0,0,1) body
                    Token('>', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('opslog', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('-', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('c', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token(''ping 1.2.3.4'', type=Token.Literal.String.Single)
                         > (0,0,0,1,2) (pygments)Token.Literal.String.Single
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('-', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('n', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token(''This entry includes a command'', type=Token.Literal.String.Single)
                         > (0,0,0,1,2) (pygments)Token.Literal.String.Single
                    Token('\n', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('>', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('opslog', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('--', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('cat', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('\n\n       ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Date', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('             ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Operator', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('       ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Flag', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('PAA', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('IPs', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('   ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Command', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Syntax', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('  ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Executed', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('              ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Note', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('\n', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('2019', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token('-', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('04', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token('-', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('30', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('13', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(':', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation
                    Token('46', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(':', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation
                    Token('42', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token('  ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Example', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Operator', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('                ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('ping', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('1.2', type=Token.Literal.Number.Float)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Float
                    Token('.', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('3.4', type=Token.Literal.Number.Float)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Float
                    Token('         ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('no', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('     ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('This', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('entry', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('includes', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('a', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('command', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('\n', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
              ListItem()
                   x (0,0,1,0,4) bulleted list item
                   > fallback to default style
                ListItemLabel('•')
                     > (0,0,1,0,6) bulleted list item label
                       (0,0,0,0,2) list item label
                    MixedStyledText('•')
                      SingleStyledText('')
                      SingleStyledText('•')
                      SingleStyledText('')
                StaticGroupedFlowables()   None:None <list_item>
                     > (0,0,0,0,3) list item body
                  Paragraph('Example 3:')   /home/assessor/working_dir/python_projects/opslog/docs/Examples.rst:53 <paragraph>
                       > (0,0,0,0,5) list item paragraph
                         (0,0,0,0,2) body
                    MixedStyledText('Example 3:')
                      SingleStyledText('Example 3:')
                  CodeBlock('> opslog -p 1 -i '127.0.0.1' -C ...')   /home/assessor/working_dir/python_projects/opslog/docs/Examples.rst:55 <literal_block>
                       > (1,0,0,0,2) code block
                         (0,0,0,0,4) list item paragraph
                         (0,0,0,0,1) body
                    Token('>', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('opslog', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('-', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('p', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('1', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('-', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('i', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token(''127.0.0.1'', type=Token.Literal.String.Single)
                         > (0,0,0,1,2) (pygments)Token.Literal.String.Single
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('-', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('C', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token(''ping -c 4 127.0.0.1'', type=Token.Literal.String.Single)
                         > (0,0,0,1,2) (pygments)Token.Literal.String.Single
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('-', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('f', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token(''testing'', type=Token.Literal.String.Single)
                         > (0,0,0,1,2) (pygments)Token.Literal.String.Single
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('-', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('n', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token(''This is a full note with comman...', type=Token.Literal.String.Single)
                         > (0,0,0,1,2) (pygments)Token.Literal.String.Single
                    Token('\n', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('PING', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('127.0', type=Token.Literal.Number.Float)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Float
                    Token('.', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('0.1', type=Token.Literal.Number.Float)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Float
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('(', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation
                    Token('127.0', type=Token.Literal.Number.Float)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Float
                    Token('.', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('0.1', type=Token.Literal.Number.Float)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Float
                    Token(')', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('56', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token('(', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation
                    Token('84', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(')', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('bytes', type=Token.Name.Builtin)
                         > (0,0,0,1,2) (pygments)Token.Name.Builtin
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('of', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('data', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('.', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('\n', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('64', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('bytes', type=Token.Name.Builtin)
                         > (0,0,0,1,2) (pygments)Token.Name.Builtin
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('from', type=Token.Keyword.Namespace)
                         > (0,0,0,1,2) (pygments)Token.Keyword.Namespace
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('127.0', type=Token.Literal.Number.Float)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Float
                    Token('.', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('0.1', type=Token.Literal.Number.Float)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Float
                    Token(':', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('icmp_seq', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('=', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('1', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('ttl', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('=', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('64', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('time', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('=', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('0.027', type=Token.Literal.Number.Float)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Float
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('ms', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('\n', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('64', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('bytes', type=Token.Name.Builtin)
                         > (0,0,0,1,2) (pygments)Token.Name.Builtin
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('from', type=Token.Keyword.Namespace)
                         > (0,0,0,1,2) (pygments)Token.Keyword.Namespace
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('127.0', type=Token.Literal.Number.Float)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Float
                    Token('.', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('0.1', type=Token.Literal.Number.Float)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Float
                    Token(':', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('icmp_seq', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('=', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('2', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('ttl', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('=', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('64', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('time', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('=', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('0.037', type=Token.Literal.Number.Float)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Float
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('ms', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('\n', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('64', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('bytes', type=Token.Name.Builtin)
                         > (0,0,0,1,2) (pygments)Token.Name.Builtin
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('from', type=Token.Keyword.Namespace)
                         > (0,0,0,1,2) (pygments)Token.Keyword.Namespace
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('127.0', type=Token.Literal.Number.Float)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Float
                    Token('.', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('0.1', type=Token.Literal.Number.Float)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Float
                    Token(':', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('icmp_seq', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('=', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('3', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('ttl', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('=', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('64', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('time', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('=', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('0.036', type=Token.Literal.Number.Float)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Float
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('ms', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('\n', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('64', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('bytes', type=Token.Name.Builtin)
                         > (0,0,0,1,2) (pygments)Token.Name.Builtin
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('from', type=Token.Keyword.Namespace)
                         > (0,0,0,1,2) (pygments)Token.Keyword.Namespace
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('127.0', type=Token.Literal.Number.Float)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Float
                    Token('.', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('0.1', type=Token.Literal.Number.Float)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Float
                    Token(':', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('icmp_seq', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('=', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('4', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('ttl', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('=', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('64', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('time', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('=', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('0.038', type=Token.Literal.Number.Float)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Float
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('ms', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('\n\n', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('---', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('127.0', type=Token.Literal.Number.Float)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Float
                    Token('.', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('0.1', type=Token.Literal.Number.Float)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Float
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('ping', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('statistics', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('---', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('\n', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('4', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('packets', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('transmitted', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(',', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('4', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('received', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(',', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('0', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token('%', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('packet', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('loss', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(',', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('time', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('59', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token('ms', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('\n', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('rtt', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('min', type=Token.Name.Builtin)
                         > (0,0,0,1,2) (pygments)Token.Name.Builtin
                    Token('/', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('avg', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('/', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('max', type=Token.Name.Builtin)
                         > (0,0,0,1,2) (pygments)Token.Name.Builtin
                    Token('/', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('mdev', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('=', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('0.027', type=Token.Literal.Number.Float)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Float
                    Token('/', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('0.034', type=Token.Literal.Number.Float)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Float
                    Token('/', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('0.038', type=Token.Literal.Number.Float)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Float
                    Token('/', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('0.007', type=Token.Literal.Number.Float)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Float
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('ms', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('\n', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('>', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('opslog', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('--', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('cat', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('\n\n    ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Date', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('                ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Operator', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('        ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Flag', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('     ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('PAA', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('     ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('IPs', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('            ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Command', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Syntax', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('    ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Executed', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('              ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Note', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('\n', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('2019', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token('-', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('04', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token('-', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('30', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('13', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(':', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation
                    Token('48', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(':', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation
                    Token('36', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token('  ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Example', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Operator', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('  ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('testing', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('     ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('1', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token('   ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('127.0', type=Token.Literal.Number.Float)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Float
                    Token('.', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('0.1', type=Token.Literal.Number.Float)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Float
                    Token('     ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('ping', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('-', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('c', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('4', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('1.2', type=Token.Literal.Number.Float)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Float
                    Token('.', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('3.4', type=Token.Literal.Number.Float)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Float
                    Token('      ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('yes', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('     ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('This', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('is', type=Token.Operator.Word)
                         > (0,0,0,1,2) (pygments)Token.Operator.Word
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('a', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('full', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('note', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('with', type=Token.Keyword)
                         > (0,0,0,1,2) (pygments)Token.Keyword
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('command', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('execution', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('\n', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                  List(style='bulleted')   /home/assessor/working_dir/python_projects/opslog/docs/Examples.rst:71 <bullet_list>
                       > (0,0,1,0,2) bulleted list
                    ListItem()
                         x (0,0,1,0,4) bulleted list item
                         > fallback to default style
                      ListItemLabel('•')
                           > (0,0,1,0,6) bulleted list item label
                             (0,0,0,0,2) list item label
                          MixedStyledText('•')
                            SingleStyledText('')
                            SingleStyledText('•')
                            SingleStyledText('')
                      StaticGroupedFlowables()   None:None <list_item>
                           > (0,0,0,0,3) list item body
                        Paragraph('Note 1: In all three examples. t...')   /home/assessor/working_dir/python_projects/opslog/docs/Examples.rst:71 <paragraph>
                             > (0,0,0,0,5) list item paragraph
                               (0,0,0,0,2) body
                          MixedStyledText('Note 1: In all three examples. t...')
                            SingleStyledText('Note 1: In all three examples. t...')
                            MixedStyledText('opslog --cat', style='monospaced')   None:None <literal>
                                 > (0,0,1,0,1) monospaced
                              SingleStyledText('opslog --cat')
                            SingleStyledText(' command is executed to show the...')
                    ListItem()
                         x (0,0,1,0,4) bulleted list item
                         > fallback to default style
                      ListItemLabel('•')
                           > (0,0,1,0,6) bulleted list item label
                             (0,0,0,0,2) list item label
                          MixedStyledText('•')
                            SingleStyledText('')
                            SingleStyledText('•')
                            SingleStyledText('')
                      StaticGroupedFlowables()   None:None <list_item>
                           > (0,0,0,0,3) list item body
                        Paragraph('Note 2: In example 2, the 7th fi...')   /home/assessor/working_dir/python_projects/opslog/docs/Examples.rst:73 <paragraph>
                             > (0,0,0,0,5) list item paragraph
                               (0,0,0,0,2) body
                          MixedStyledText('Note 2: In example 2, the 7th fi...')
                            SingleStyledText('Note 2: In example 2, the 7th fi...')
                            MixedStyledText('-c', style='monospaced')   None:None <literal>
                                 > (0,0,1,0,1) monospaced
                              SingleStyledText('-c')
                            SingleStyledText(' option. This option only logs t...')
#### UpExpandingContainer('header')
  Header('OpsLog Documentation, Release v1...')
       > (0,0,0,0,2) header
         (0,0,0,0,1) body
    MixedStyledText('OpsLog Documentation, Release v1...')
      Field('OpsLog Documentation')
        SingleStyledText('OpsLog Documentation')
      SingleStyledText(', ')
      Field('Release v1.8 May, 2019')
        SingleStyledText('Release v1.8 May, 2019')
#### DownExpandingContainer('footer')
  Footer('6		Chapter 3.  Opslog Examples')
       > (0,0,0,0,2) footer
         (0,0,0,0,1) body
    MixedStyledText('6		Chapter 3.  Opslog Examples')
      Field('6')
        SingleStyledText('6')
      Tab('	')
      Tab('	')
      StringField('Chapter')
      SingleStyledText(' ')
      Field('3')
        SingleStyledText('3')
      SingleStyledText('.  ')
      Field('Opslog Examples')
        SingleStyledText('Opslog Examples')
---------------------------------- page 7 ----------------------------------
#### ChainedContainer('column1')
  (continued) DocumentTree()
    (continued) StaticGroupedFlowables()   /home/assessor/working_dir/python_projects/opslog/docs/index.rst:0 <compound>
      (continued) StaticGroupedFlowables(id='%Examples')   None:None <start_of_file>
        (continued) Section(id='%Examples#opslog-examples')   /home/assessor/working_dir/python_projects/opslog/docs/Examples.rst:2 <section>
             > (0,0,0,1,2) chapter
          (continued) Section(id='%Examples#creating-log-entries')   /home/assessor/working_dir/python_projects/opslog/docs/Examples.rst:30 <section>
            (continued) List(style='bulleted')   /home/assessor/working_dir/python_projects/opslog/docs/Examples.rst:36 <bullet_list>
                 > (0,0,1,0,2) bulleted list
              (continued) ListItem()
                   x (0,0,1,0,4) bulleted list item
                   > fallback to default style
                (continued) StaticGroupedFlowables()   None:None <list_item>
                     > (0,0,0,0,3) list item body
                  (continued) List(style='bulleted')   /home/assessor/working_dir/python_projects/opslog/docs/Examples.rst:71 <bullet_list>
                       > (0,0,1,0,2) bulleted list
                    (continued) ListItem()
                         x (0,0,1,0,4) bulleted list item
                         > fallback to default style
                      (continued) StaticGroupedFlowables()   None:None <list_item>
                           > (0,0,0,0,3) list item body
                        (continued) Paragraph('Note 2: In example 2, the 7th fi...')   /home/assessor/working_dir/python_projects/opslog/docs/Examples.rst:73 <paragraph>
                             > (0,0,0,0,5) list item paragraph
                               (0,0,0,0,2) body
                    ListItem()
                         x (0,0,1,0,4) bulleted list item
                         > fallback to default style
                      ListItemLabel('•')
                           > (0,0,1,0,6) bulleted list item label
                             (0,0,0,0,2) list item label
                          MixedStyledText('•')
                            SingleStyledText('')
                            SingleStyledText('•')
                            SingleStyledText('')
                      StaticGroupedFlowables()   None:None <list_item>
                           > (0,0,0,0,3) list item body
                        Paragraph('Note 3: In example 3, the 7th fi...')   /home/assessor/working_dir/python_projects/opslog/docs/Examples.rst:75 <paragraph>
                             > (0,0,0,0,5) list item paragraph
                               (0,0,0,0,2) body
                          MixedStyledText('Note 3: In example 3, the 7th fi...')
                            SingleStyledText('Note 3: In example 3, the 7th fi...')
                            MixedStyledText('-C', style='monospaced')   None:None <literal>
                                 > (0,0,1,0,1) monospaced
                              SingleStyledText('-C')
                            SingleStyledText(' option. This option creates the...')
          Section(id='%Examples#displaying-and-searching-the-log')   /home/assessor/working_dir/python_projects/opslog/docs/Examples.rst:78 <section>
            Heading('3.3 Displaying and Searching the...')   /home/assessor/working_dir/python_projects/opslog/docs/Examples.rst:78 <title>
                 > (0,0,0,1,2) heading level 2
                   (0,0,0,0,2) other heading levels
                MixedStyledText('3.3 Displaying and Searching the...')
                  SingleStyledText('3.3')
                  SingleStyledText(' ')
                  SingleStyledText('Displaying and Searching the Log')
            Paragraph('Logs can be easily displayed usi...')   /home/assessor/working_dir/python_projects/opslog/docs/Examples.rst:80 <paragraph>
                 > (0,0,0,0,2) body
              MixedStyledText('Logs can be easily displayed usi...')
                SingleStyledText('Logs can be easily displayed usi...')
                MixedStyledText('opslog --cat', style='monospaced')   None:None <literal>
                     > (0,0,1,0,1) monospaced
                  SingleStyledText('opslog --cat')
                SingleStyledText(' command. The log displayed will...')
                MixedStyledText('head', style='monospaced')   None:None <literal>
                     > (0,0,1,0,1) monospaced
                  SingleStyledText('head')
                SingleStyledText(', ')
                MixedStyledText('less', style='monospaced')   None:None <literal>
                     > (0,0,1,0,1) monospaced
                  SingleStyledText('less')
                SingleStyledText(', or ')
                MixedStyledText('grep', style='monospaced')   None:None <literal>
                     > (0,0,1,0,1) monospaced
                  SingleStyledText('grep')
                SingleStyledText('.')
            List(style='bulleted')   /home/assessor/working_dir/python_projects/opslog/docs/Examples.rst:84 <bullet_list>
                 > (0,0,1,0,2) bulleted list
              ListItem()
                   x (0,0,1,0,4) bulleted list item
                   > fallback to default style
                ListItemLabel('•')
                     > (0,0,1,0,6) bulleted list item label
                       (0,0,0,0,2) list item label
                    MixedStyledText('•')
                      SingleStyledText('')
                      SingleStyledText('•')
                      SingleStyledText('')
                StaticGroupedFlowables()   /home/assessor/working_dir/python_projects/opslog/docs/Examples.rst:None <list_item>
                     > (0,0,0,0,3) list item body
                  Paragraph('Example 1:')   /home/assessor/working_dir/python_projects/opslog/docs/Examples.rst:84 <paragraph>
                       > (0,0,0,0,5) list item paragraph
                         (0,0,0,0,2) body
                    MixedStyledText('Example 1:')
                      SingleStyledText('Example 1:')
                  CodeBlock('> opslog -o\nExample Operator\n> o...')   /home/assessor/working_dir/python_projects/opslog/docs/Examples.rst:86 <literal_block>
                       > (1,0,0,0,2) code block
                         (0,0,0,0,4) list item paragraph
                         (0,0,0,0,1) body
                    Token('>', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('opslog', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('-', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('o', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('\n', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Example', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Operator', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('\n', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('>', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('opslog', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('--', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('cat', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('\n\n          ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Date', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('              ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Operator', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('            ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Flag', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('        ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('PAA', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('IPs', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Command', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Syntax', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Executed', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('              ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Note', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('\n', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('1', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token('  ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('2019', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token('-', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('04', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token('-', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('30', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('14', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(':', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation
                    Token('00', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(':', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation
                    Token('03', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token('  ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Example', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Operator', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('                                ...', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Sample', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Entry', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('1', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token('\n', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('2', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token('  ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('2019', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token('-', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('04', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token('-', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('30', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('14', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(':', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation
                    Token('00', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(':', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation
                    Token('06', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token('  ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Example', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Operator', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('                                ...', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Sample', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Entry', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('2', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token('\n', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('3', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token('  ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('2019', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token('-', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('04', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token('-', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('30', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('14', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(':', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation
                    Token('00', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(':', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation
                    Token('31', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token('  ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Example', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Operator', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('  ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('mission', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('                                ...', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Sample', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Entry', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('3', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(',', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('with', type=Token.Keyword)
                         > (0,0,0,1,2) (pygments)Token.Keyword
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('flag', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('\n', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('4', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token('  ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('2019', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token('-', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('04', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token('-', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('30', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('14', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(':', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation
                    Token('00', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(':', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation
                    Token('38', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token('  ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Example', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Operator', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('  ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('mission', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('                                ...', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Sample', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Entry', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('4', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(',', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('with', type=Token.Keyword)
                         > (0,0,0,1,2) (pygments)Token.Keyword
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('flag', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('\n', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('5', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token('  ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('2019', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token('-', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('04', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token('-', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('30', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('14', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(':', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation
                    Token('00', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(':', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation
                    Token('49', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token('  ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Example', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Operator', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('  ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('opschecks', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('                                ...', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Sample', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Entry', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('5', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(',', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('with', type=Token.Keyword)
                         > (0,0,0,1,2) (pygments)Token.Keyword
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('flag', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('2', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token('\n', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('6', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token('  ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('2019', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token('-', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('04', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token('-', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('30', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('14', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(':', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation
                    Token('00', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(':', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation
                    Token('52', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token('  ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Example', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Operator', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('  ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('opschecks', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('                                ...', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Sample', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Entry', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('6', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(',', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('with', type=Token.Keyword)
                         > (0,0,0,1,2) (pygments)Token.Keyword
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('flag', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('2', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token('\n', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('7', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token('  ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('2019', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token('-', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('04', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token('-', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('30', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('14', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(':', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation
                    Token('01', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(':', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation
                    Token('14', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token('  ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Example', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Operator', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('  ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('example', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('opschecks', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('                                ...', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Sample', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Entry', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('7', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(',', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('with', type=Token.Keyword)
                         > (0,0,0,1,2) (pygments)Token.Keyword
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('2', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('flags', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('\n', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('8', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token('  ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('2019', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token('-', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('04', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token('-', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('30', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('14', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(':', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation
                    Token('01', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(':', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation
                    Token('25', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token('  ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Example', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Operator', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('  ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('example', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('mission', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('                                ...', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Sample', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Entry', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('8', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(',', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('with', type=Token.Keyword)
                         > (0,0,0,1,2) (pygments)Token.Keyword
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('2', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('flags', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('\n', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
              ListItem()
                   x (0,0,1,0,4) bulleted list item
                   > fallback to default style
                ListItemLabel('•')
                     > (0,0,1,0,6) bulleted list item label
                       (0,0,0,0,2) list item label
                    MixedStyledText('•')
                      SingleStyledText('')
                      SingleStyledText('•')
                      SingleStyledText('')
                StaticGroupedFlowables()   /home/assessor/working_dir/python_projects/opslog/docs/Examples.rst:None <list_item>
                     > (0,0,0,0,3) list item body
                  Paragraph('Example 2:')   /home/assessor/working_dir/python_projects/opslog/docs/Examples.rst:100 <paragraph>
                       > (0,0,0,0,5) list item paragraph
                         (0,0,0,0,2) body
                    MixedStyledText('Example 2:')
                      SingleStyledText('Example 2:')
                  CodeBlock('> opslog --cat | head -n4\n\n     ...')   /home/assessor/working_dir/python_projects/opslog/docs/Examples.rst:102 <literal_block>
                       > (1,0,0,0,2) code block
                         (0,0,0,0,4) list item paragraph
                         (0,0,0,0,1) body
                    Token('>', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('opslog', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('--', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('cat', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('|', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('head', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('-', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('n4', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('\n\n      ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Date', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('              ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Operator', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('            ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Flag', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('        ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('PAA', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('IPs', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Command', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Syntax', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Executed', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('              ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Note', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('\n', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('1', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token('  ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('2019', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token('-', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('04', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token('-', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('30', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('14', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(':', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation
                    Token('00', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(':', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation
                    Token('03', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token('  ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Example', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Operator', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('                                ...', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Sample', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Entry', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('1', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token('\n', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('2', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token('  ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('2019', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token('-', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('04', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token('-', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('30', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('14', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(':', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation
                    Token('00', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(':', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation
                    Token('06', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token('  ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Example', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Operator', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('                                ...', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Sample', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Entry', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('2', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token('\n', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('3', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token('  ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('2019', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token('-', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('04', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token('-', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('30', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('14', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(':', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation
                    Token('00', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(':', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation
                    Token('31', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token('  ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Example', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Operator', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('  ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('mission', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('                                ...', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Sample', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Entry', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('3', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(',', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('with', type=Token.Keyword)
                         > (0,0,0,1,2) (pygments)Token.Keyword
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('flag', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('\n', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
            Paragraph('Although the logs can be searche...')   /home/assessor/working_dir/python_projects/opslog/docs/Examples.rst:109 <paragraph>
                 > (0,0,0,0,2) body
              MixedStyledText('Although the logs can be searche...')
                SingleStyledText('Although the logs can be searche...')
                MixedStyledText('opslog -lf', style='monospaced')   None:None <literal>
                     > (0,0,1,0,1) monospaced
                  SingleStyledText('opslog -lf')
                SingleStyledText(' command.')
            List(style='bulleted')   /home/assessor/working_dir/python_projects/opslog/docs/Examples.rst:113 <bullet_list>
                 > (0,0,1,0,2) bulleted list
              ListItem()
                   x (0,0,1,0,4) bulleted list item
                   > fallback to default style
                ListItemLabel('•')
                     > (0,0,1,0,6) bulleted list item label
                       (0,0,0,0,2) list item label
                    MixedStyledText('•')
                      SingleStyledText('')
                      SingleStyledText('•')
                      SingleStyledText('')
                StaticGroupedFlowables()   /home/assessor/working_dir/python_projects/opslog/docs/Examples.rst:None <list_item>
                     > (0,0,0,0,3) list item body
                  Paragraph('Example:')   /home/assessor/working_dir/python_projects/opslog/docs/Examples.rst:113 <paragraph>
                       > (0,0,0,0,5) list item paragraph
                         (0,0,0,0,2) body
                    MixedStyledText('Example:')
                      SingleStyledText('Example:')
#### UpExpandingContainer('header')
  Header('		OpsLog Documentation, Release ...')
       > (0,0,0,0,2) header
         (0,0,0,0,1) body
    MixedStyledText('		OpsLog Documentation, Release ...')
      Tab('	')
      Tab('	')
      Field('OpsLog Documentation')
        SingleStyledText('OpsLog Documentation')
      SingleStyledText(', ')
      Field('Release v1.8 May, 2019')
        SingleStyledText('Release v1.8 May, 2019')
#### DownExpandingContainer('footer')
  Footer('3.3.  Displaying and Searching t...')
       > (0,0,0,0,2) footer
         (0,0,0,0,1) body
    MixedStyledText('3.3.  Displaying and Searching t...')
      Field('3.3')
        SingleStyledText('3.3')
      SingleStyledText('.  ')
      Field('Displaying and Searching the Log')
        SingleStyledText('Displaying and Searching the Log')
      Tab('	')
      Tab('	')
      Field('7')
        SingleStyledText('7')
---------------------------------- page 8 ----------------------------------
#### ChainedContainer('column1')
  (continued) DocumentTree()
    (continued) StaticGroupedFlowables()   /home/assessor/working_dir/python_projects/opslog/docs/index.rst:0 <compound>
      (continued) StaticGroupedFlowables(id='%Examples')   None:None <start_of_file>
        (continued) Section(id='%Examples#opslog-examples')   /home/assessor/working_dir/python_projects/opslog/docs/Examples.rst:2 <section>
             > (0,0,0,1,2) chapter
          (continued) Section(id='%Examples#displaying-and-searching-the-log')   /home/assessor/working_dir/python_projects/opslog/docs/Examples.rst:78 <section>
            (continued) List(style='bulleted')   /home/assessor/working_dir/python_projects/opslog/docs/Examples.rst:113 <bullet_list>
                 > (0,0,1,0,2) bulleted list
              (continued) ListItem()
                   x (0,0,1,0,4) bulleted list item
                   > fallback to default style
                (continued) StaticGroupedFlowables()   /home/assessor/working_dir/python_projects/opslog/docs/Examples.rst:None <list_item>
                     > (0,0,0,0,3) list item body
                  CodeBlock('> opslog --lf\n\n    Below are the...')   /home/assessor/working_dir/python_projects/opslog/docs/Examples.rst:115 <literal_block>
                       > (1,0,0,0,2) code block
                         (0,0,0,0,4) list item paragraph
                         (0,0,0,0,1) body
            Paragraph('You can also search for and disp...')   /home/assessor/working_dir/python_projects/opslog/docs/Examples.rst:125 <paragraph>
                 > (0,0,0,0,2) body
              MixedStyledText('You can also search for and disp...')
                SingleStyledText('You can also search for and disp...')
                MixedStyledText('opslog -sf flag', style='monospaced')   None:None <literal>
                     > (0,0,1,0,1) monospaced
                  SingleStyledText('opslog -sf flag')
                SingleStyledText(' command. The command can accept...')
            List(style='bulleted')   /home/assessor/working_dir/python_projects/opslog/docs/Examples.rst:128 <bullet_list>
                 > (0,0,1,0,2) bulleted list
              ListItem()
                   x (0,0,1,0,4) bulleted list item
                   > fallback to default style
                ListItemLabel('•')
                     > (0,0,1,0,6) bulleted list item label
                       (0,0,0,0,2) list item label
                    MixedStyledText('•')
                      SingleStyledText('')
                      SingleStyledText('•')
                      SingleStyledText('')
                StaticGroupedFlowables()   /home/assessor/working_dir/python_projects/opslog/docs/Examples.rst:None <list_item>
                     > (0,0,0,0,3) list item body
                  Paragraph('Example 1:')   /home/assessor/working_dir/python_projects/opslog/docs/Examples.rst:128 <paragraph>
                       > (0,0,0,0,5) list item paragraph
                         (0,0,0,0,2) body
                    MixedStyledText('Example 1:')
                      SingleStyledText('Example 1:')
                  CodeBlock('> opslog -sf opschecks\n\n        ...')   /home/assessor/working_dir/python_projects/opslog/docs/Examples.rst:130 <literal_block>
                       > (1,0,0,0,2) code block
                         (0,0,0,0,4) list item paragraph
                         (0,0,0,0,1) body
                    Token('>', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('opslog', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('-', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('sf', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('opschecks', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('\n\n        ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Date', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('              ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Operator', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('            ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Flag', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('        ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('PAA', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('IPs', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Command', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Syntax', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Executed', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('              ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Note', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('\n', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('5', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token('  ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('2019', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token('-', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('04', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token('-', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('30', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('14', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(':', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation
                    Token('00', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(':', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation
                    Token('49', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token('  ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Example', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Operator', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('  ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('opschecks', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('                                ...', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Sample', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Entry', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('5', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(',', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('with', type=Token.Keyword)
                         > (0,0,0,1,2) (pygments)Token.Keyword
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('flag', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('2', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token('\n', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('6', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token('  ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('2019', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token('-', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('04', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token('-', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('30', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('14', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(':', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation
                    Token('00', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(':', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation
                    Token('52', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token('  ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Example', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Operator', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('  ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('opschecks', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('                                ...', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Sample', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Entry', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('6', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(',', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('with', type=Token.Keyword)
                         > (0,0,0,1,2) (pygments)Token.Keyword
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('flag', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('2', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token('\n', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('7', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token('  ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('2019', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token('-', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('04', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token('-', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('30', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('14', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(':', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation
                    Token('01', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(':', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation
                    Token('14', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token('  ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Example', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Operator', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('  ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('example', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('opschecks', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('                                ...', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Sample', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Entry', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('7', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(',', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('with', type=Token.Keyword)
                         > (0,0,0,1,2) (pygments)Token.Keyword
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('2', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('flags', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('\n', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
              ListItem()
                   x (0,0,1,0,4) bulleted list item
                   > fallback to default style
                ListItemLabel('•')
                     > (0,0,1,0,6) bulleted list item label
                       (0,0,0,0,2) list item label
                    MixedStyledText('•')
                      SingleStyledText('')
                      SingleStyledText('•')
                      SingleStyledText('')
                StaticGroupedFlowables()   /home/assessor/working_dir/python_projects/opslog/docs/Examples.rst:None <list_item>
                     > (0,0,0,0,3) list item body
                  Paragraph('Example 2:')   /home/assessor/working_dir/python_projects/opslog/docs/Examples.rst:137 <paragraph>
                       > (0,0,0,0,5) list item paragraph
                         (0,0,0,0,2) body
                    MixedStyledText('Example 2:')
                      SingleStyledText('Example 2:')
                  CodeBlock('> opslog -sf example mission\n\n  ...')   /home/assessor/working_dir/python_projects/opslog/docs/Examples.rst:139 <literal_block>
                       > (1,0,0,0,2) code block
                         (0,0,0,0,4) list item paragraph
                         (0,0,0,0,1) body
                    Token('>', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('opslog', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('-', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('sf', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('example', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('mission', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('\n\n        ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Date', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('              ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Operator', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('            ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Flag', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('        ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('PAA', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('IPs', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Command', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Syntax', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Executed', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('              ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Note', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('\n', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('3', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token('  ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('2019', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token('-', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('04', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token('-', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('30', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('14', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(':', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation
                    Token('00', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(':', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation
                    Token('31', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token('  ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Example', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Operator', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('  ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('mission', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('                                ...', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Sample', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Entry', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('3', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(',', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('with', type=Token.Keyword)
                         > (0,0,0,1,2) (pygments)Token.Keyword
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('flag', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('\n', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('4', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token('  ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('2019', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token('-', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('04', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token('-', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('30', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('14', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(':', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation
                    Token('00', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(':', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation
                    Token('38', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token('  ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Example', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Operator', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('  ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('mission', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('                                ...', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Sample', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Entry', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('4', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(',', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('with', type=Token.Keyword)
                         > (0,0,0,1,2) (pygments)Token.Keyword
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('flag', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('\n', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('7', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token('  ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('2019', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token('-', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('04', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token('-', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('30', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('14', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(':', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation
                    Token('01', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(':', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation
                    Token('14', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token('  ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Example', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Operator', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('  ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('example', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('opschecks', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('                                ...', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Sample', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Entry', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('7', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(',', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('with', type=Token.Keyword)
                         > (0,0,0,1,2) (pygments)Token.Keyword
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('2', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('flags', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('\n', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('8', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token('  ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('2019', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token('-', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('04', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token('-', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('30', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('14', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(':', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation
                    Token('01', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(':', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation
                    Token('25', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token('  ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Example', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Operator', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('  ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('example', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('mission', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('                                ...', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Sample', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Entry', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('8', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(',', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('with', type=Token.Keyword)
                         > (0,0,0,1,2) (pygments)Token.Keyword
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('2', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('flags', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('\n', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
          Section(id='%Examples#exporting-and-merging-logs')   /home/assessor/working_dir/python_projects/opslog/docs/Examples.rst:149 <section>
            Heading('3.4 Exporting and Merging Logs')   /home/assessor/working_dir/python_projects/opslog/docs/Examples.rst:149 <title>
                 > (0,0,0,1,2) heading level 2
                   (0,0,0,0,2) other heading levels
                MixedStyledText('3.4 Exporting and Merging Logs')
                  SingleStyledText('3.4')
                  SingleStyledText(' ')
                  SingleStyledText('Exporting and Merging Logs')
            Paragraph('Once the logs are complete, they...')   /home/assessor/working_dir/python_projects/opslog/docs/Examples.rst:151 <paragraph>
                 > (0,0,0,0,2) body
              MixedStyledText('Once the logs are complete, they...')
                SingleStyledText('Once the logs are complete, they...')
                MixedStyledText('opslog --export', style='monospaced')   None:None <literal>
                     > (0,0,1,0,1) monospaced
                  SingleStyledText('opslog --export')
                SingleStyledText(' command and specifying the expo...')
            List(style='bulleted')   /home/assessor/working_dir/python_projects/opslog/docs/Examples.rst:156 <bullet_list>
                 > (0,0,1,0,2) bulleted list
              ListItem()
                   x (0,0,1,0,4) bulleted list item
                   > fallback to default style
                ListItemLabel('•')
                     > (0,0,1,0,6) bulleted list item label
                       (0,0,0,0,2) list item label
                    MixedStyledText('•')
                      SingleStyledText('')
                      SingleStyledText('•')
                      SingleStyledText('')
                StaticGroupedFlowables()   /home/assessor/working_dir/python_projects/opslog/docs/Examples.rst:None <list_item>
                     > (0,0,0,0,3) list item body
                  Paragraph('Example:')   /home/assessor/working_dir/python_projects/opslog/docs/Examples.rst:156 <paragraph>
                       > (0,0,0,0,5) list item paragraph
                         (0,0,0,0,2) body
                    MixedStyledText('Example:')
                      SingleStyledText('Example:')
                  CodeBlock('> ls -l ~/tmp/\ntotal 0\n> opslog ...')   /home/assessor/working_dir/python_projects/opslog/docs/Examples.rst:158 <literal_block>
                       > (1,0,0,0,2) code block
                         (0,0,0,0,4) list item paragraph
                         (0,0,0,0,1) body
                    Token('>', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('ls', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('-', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('l', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('~/', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('tmp', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('/', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('\n', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('total', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('0', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token('\n', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('>', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('opslog', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('--', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('export', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('~/', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('tmp', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('/', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('log', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('\n', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Log', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('file', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('successfully', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('exported', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('\n', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('>', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('ls', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('-', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('l', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('~/', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('tmp', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('/', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('\n', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('total', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('4', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token('\n', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('-', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('rw', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('-', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('r', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('--', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('r', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('--', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('1', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('assessor', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('assessor', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('594', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Apr', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('30', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('10', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(':', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation
                    Token('24', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('log', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('\n', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
#### UpExpandingContainer('header')
  Header('OpsLog Documentation, Release v1...')
       > (0,0,0,0,2) header
         (0,0,0,0,1) body
    MixedStyledText('OpsLog Documentation, Release v1...')
      Field('OpsLog Documentation')
        SingleStyledText('OpsLog Documentation')
      SingleStyledText(', ')
      Field('Release v1.8 May, 2019')
        SingleStyledText('Release v1.8 May, 2019')
#### DownExpandingContainer('footer')
  Footer('8		Chapter 3.  Opslog Examples')
       > (0,0,0,0,2) footer
         (0,0,0,0,1) body
    MixedStyledText('8		Chapter 3.  Opslog Examples')
      Field('8')
        SingleStyledText('8')
      Tab('	')
      Tab('	')
      StringField('Chapter')
      SingleStyledText(' ')
      Field('3')
        SingleStyledText('3')
      SingleStyledText('.  ')
      Field('Opslog Examples')
        SingleStyledText('Opslog Examples')
---------------------------------- page 9 ----------------------------------
#### ChainedContainer('column1')
  (continued) DocumentTree()
    (continued) StaticGroupedFlowables()   /home/assessor/working_dir/python_projects/opslog/docs/index.rst:0 <compound>
      (continued) StaticGroupedFlowables(id='%Examples')   None:None <start_of_file>
        (continued) Section(id='%Examples#opslog-examples')   /home/assessor/working_dir/python_projects/opslog/docs/Examples.rst:2 <section>
             > (0,0,0,1,2) chapter
          (continued) Section(id='%Examples#exporting-and-merging-logs')   /home/assessor/working_dir/python_projects/opslog/docs/Examples.rst:149 <section>
            (continued) List(style='bulleted')   /home/assessor/working_dir/python_projects/opslog/docs/Examples.rst:156 <bullet_list>
                 > (0,0,1,0,2) bulleted list
              (continued) ListItem()
                   x (0,0,1,0,4) bulleted list item
                   > fallback to default style
                (continued) StaticGroupedFlowables()   /home/assessor/working_dir/python_projects/opslog/docs/Examples.rst:None <list_item>
                     > (0,0,0,0,3) list item body
                  (continued) CodeBlock('> ls -l ~/tmp/\ntotal 0\n> opslog ...')   /home/assessor/working_dir/python_projects/opslog/docs/Examples.rst:158 <literal_block>
                       > (1,0,0,0,2) code block
                         (0,0,0,0,4) list item paragraph
                         (0,0,0,0,1) body
              ListItem()
                   x (0,0,1,0,4) bulleted list item
                   > fallback to default style
                ListItemLabel('•')
                     > (0,0,1,0,6) bulleted list item label
                       (0,0,0,0,2) list item label
                    MixedStyledText('•')
                      SingleStyledText('')
                      SingleStyledText('•')
                      SingleStyledText('')
                StaticGroupedFlowables()   /home/assessor/working_dir/python_projects/opslog/docs/Examples.rst:None <list_item>
                     > (0,0,0,0,3) list item body
                  Paragraph('Example 2:')   /home/assessor/working_dir/python_projects/opslog/docs/Examples.rst:176 <paragraph>
                       > (0,0,0,0,5) list item paragraph
                         (0,0,0,0,2) body
                    MixedStyledText('Example 2:')
                      SingleStyledText('Example 2:')
                  CodeBlock('> ls -l ~/tmp/\ntotal 0\n> opslog ...')   /home/assessor/working_dir/python_projects/opslog/docs/Examples.rst:178 <literal_block>
                       > (1,0,0,0,2) code block
                         (0,0,0,0,4) list item paragraph
                         (0,0,0,0,1) body
                    Token('>', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('ls', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('-', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('l', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('~/', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('tmp', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('/', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('\n', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('total', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('0', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token('\n', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('>', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('opslog', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('--', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('export', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('~/', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('tmp', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('/', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('log', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('.', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('csv', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('--', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('format', type=Token.Name.Builtin)
                         > (0,0,0,1,2) (pygments)Token.Name.Builtin
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('csv', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('\n', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Log', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('file', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('successfully', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('exported', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('\n', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('>', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('ls', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('-', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('l', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('~/', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('tmp', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('/', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('\n', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('total', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('4', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token('\n', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('-', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('rw', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('-', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('r', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('--', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('r', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('--', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('1', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('assessor', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('assessor', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('594', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Apr', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('30', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('10', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(':', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation
                    Token('24', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('log', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('.', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('csv', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('\n', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('>', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('cat', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('~/', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('tmp', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('/', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('log', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('.', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('csv', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('\n', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('2019', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token('-', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('04', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token('-', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('30', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('14', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(':', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation
                    Token('00', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(':', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation
                    Token('03', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(';', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation
                    Token('Example', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Operator', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(';;;;;;', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation
                    Token('Sample', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Entry', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('1', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token('\n', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('2019', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token('-', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('04', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token('-', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('30', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('14', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(':', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation
                    Token('00', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(':', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation
                    Token('06', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(';', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation
                    Token('Example', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Operator', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(';;;;;;', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation
                    Token('Sample', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Entry', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('2', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token('\n', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('2019', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token('-', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('04', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token('-', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('30', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('14', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(':', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation
                    Token('00', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(':', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation
                    Token('31', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(';', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation
                    Token('Example', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Operator', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(';', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation
                    Token('mission', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(';;;;;', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation
                    Token('Sample', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Entry', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('3', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(',', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('with', type=Token.Keyword)
                         > (0,0,0,1,2) (pygments)Token.Keyword
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('flag', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('\n', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('2019', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token('-', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('04', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token('-', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('30', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('14', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(':', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation
                    Token('00', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(':', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation
                    Token('38', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(';', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation
                    Token('Example', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Operator', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(';', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation
                    Token('mission', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(';;;;;', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation
                    Token('Sample', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Entry', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('4', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(',', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('with', type=Token.Keyword)
                         > (0,0,0,1,2) (pygments)Token.Keyword
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('flag', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('\n', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('2019', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token('-', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('04', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token('-', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('30', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('14', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(':', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation
                    Token('00', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(':', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation
                    Token('49', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(';', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation
                    Token('Example', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Operator', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(';', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation
                    Token('opschecks', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(';;;;;', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation
                    Token('Sample', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Entry', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('5', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(',', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('with', type=Token.Keyword)
                         > (0,0,0,1,2) (pygments)Token.Keyword
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('flag', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('2', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token('\n', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('2019', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token('-', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('04', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token('-', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('30', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('14', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(':', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation
                    Token('00', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(':', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation
                    Token('52', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(';', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation
                    Token('Example', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Operator', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(';', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation
                    Token('opschecks', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(';;;;;', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation
                    Token('Sample', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Entry', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('6', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(',', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('with', type=Token.Keyword)
                         > (0,0,0,1,2) (pygments)Token.Keyword
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('flag', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('2', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token('\n', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('2019', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token('-', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('04', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token('-', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('30', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('14', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(':', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation
                    Token('01', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(':', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation
                    Token('14', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(';', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation
                    Token('Example', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Operator', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(';', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation
                    Token('example', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('opschecks', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(';;;;;', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation
                    Token('Sample', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Entry', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('7', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(',', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('with', type=Token.Keyword)
                         > (0,0,0,1,2) (pygments)Token.Keyword
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('2', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('flags', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('\n', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('2019', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token('-', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('04', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token('-', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('30', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('14', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(':', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation
                    Token('01', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(':', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation
                    Token('25', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(';', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation
                    Token('Example', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Operator', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(';', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation
                    Token('example', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('mission', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(';;;;;', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation
                    Token('Sample', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Entry', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('8', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(',', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('with', type=Token.Keyword)
                         > (0,0,0,1,2) (pygments)Token.Keyword
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('2', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('flags', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('\n', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
            Paragraph('If for any reason multiple logs ...')   /home/assessor/working_dir/python_projects/opslog/docs/Examples.rst:195 <paragraph>
                 > (0,0,0,0,2) body
              MixedStyledText('If for any reason multiple logs ...')
                SingleStyledText('If for any reason multiple logs ...')
                MixedStyledText('opslog --merge', style='monospaced')   None:None <literal>
                     > (0,0,1,0,1) monospaced
                  SingleStyledText('opslog --merge')
                SingleStyledText(' command can do so. The command ...')
            List(style='bulleted')   /home/assessor/working_dir/python_projects/opslog/docs/Examples.rst:199 <bullet_list>
                 > (0,0,1,0,2) bulleted list
              ListItem()
                   x (0,0,1,0,4) bulleted list item
                   > fallback to default style
                ListItemLabel('•')
                     > (0,0,1,0,6) bulleted list item label
                       (0,0,0,0,2) list item label
                    MixedStyledText('•')
                      SingleStyledText('')
                      SingleStyledText('•')
                      SingleStyledText('')
                StaticGroupedFlowables()   None:None <list_item>
                     > (0,0,0,0,3) list item body
                  Paragraph('Example:')   /home/assessor/working_dir/python_projects/opslog/docs/Examples.rst:199 <paragraph>
                       > (0,0,0,0,5) list item paragraph
                         (0,0,0,0,2) body
                    MixedStyledText('Example:')
                      SingleStyledText('Example:')
                  CodeBlock('> ls -l\n\ntotal 8\n-rw-r--r-- 1 as...')   /home/assessor/working_dir/python_projects/opslog/docs/Examples.rst:201 <literal_block>
                       > (1,0,0,0,2) code block
                         (0,0,0,0,4) list item paragraph
                         (0,0,0,0,1) body
                    Token('>', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('ls', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('-', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('l', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('\n\n', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('total', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('8', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token('\n', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('-', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('rw', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('-', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('r', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('--', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('r', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('--', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('1', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('assessor', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('assessor', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('138', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Apr', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('30', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('10', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(':', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation
                    Token('29', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('merg1_log', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('.', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('csv', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('\n', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('-', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('rw', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('-', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('r', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('--', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('r', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('--', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('1', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('assessor', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('assessor', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('  ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('92', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('Apr', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('30', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('10', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(':', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation
                    Token('30', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('merg2_log', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('.', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('csv', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('\n\n', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('>', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('cat', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('merg1_log', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('.', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('csv', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token('\n\n', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('2019', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token('-', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('04', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token('-', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('30', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('15', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(':', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation
                    Token('28', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(':', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation
                    Token('32', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(';', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation
                    Token('merg1', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(';;;;;;', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation
                    Token('Sample', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('entry', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('1', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token('\n', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('2019', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token('-', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('04', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token('-', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('30', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('15', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(':', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation
                    Token('28', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(':', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation
                    Token('41', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(';', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation
                    Token('merg1', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(';;;;;;', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation
                    Token('Sample', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('entry', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('2', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token('\n', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('2019', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token('-', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('04', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token('-', type=Token.Operator)
                         > (0,0,0,1,2) (pygments)Token.Operator
                    Token('30', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('15', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(':', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation
                    Token('29', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(':', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation
                    Token('19', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token(';', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation
                    Token('merg1', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(';;;;;;', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation
                    Token('Sample', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('entry', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name
                    Token(' ', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
                    Token('5', type=Token.Literal.Number.Integer)
                         > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer
                    Token('\n\n', type=Token.Text)
                         > (0,0,0,1,2) (pygments)Token.Text
#### UpExpandingContainer('header')
  Header('		OpsLog Documentation, Release ...')
       > (0,0,0,0,2) header
         (0,0,0,0,1) body
    MixedStyledText('		OpsLog Documentation, Release ...')
      Tab('	')
      Tab('	')
      Field('OpsLog Documentation')
        SingleStyledText('OpsLog Documentation')
      SingleStyledText(', ')
      Field('Release v1.8 May, 2019')
        SingleStyledText('Release v1.8 May, 2019')
#### DownExpandingContainer('footer')
  Footer('3.4.  Exporting and Merging Logs...')
       > (0,0,0,0,2) footer
         (0,0,0,0,1) body
    MixedStyledText('3.4.  Exporting and Merging Logs...')
      Field('3.4')
        SingleStyledText('3.4')
      SingleStyledText('.  ')
      Field('Exporting and Merging Logs')
        SingleStyledText('Exporting and Merging Logs')
      Tab('	')
      Tab('	')
      Field('9')
        SingleStyledText('9')
---------------------------------- page 10 ----------------------------------
#### ChainedContainer('column1')
  (continued) DocumentTree()
    (continued) StaticGroupedFlowables()   /home/assessor/working_dir/python_projects/opslog/docs/index.rst:0 <compound>
      (continued) StaticGroupedFlowables(id='%Examples')   None:None <start_of_file>
        (continued) Section(id='%Examples#opslog-examples')   /home/assessor/working_dir/python_projects/opslog/docs/Examples.rst:2 <section>
             > (0,0,0,1,2) chapter
          (continued) Section(id='%Examples#exporting-and-merging-logs')   /home/assessor/working_dir/python_projects/opslog/docs/Examples.rst:149 <section>
            (continued) List(style='bulleted')   /home/assessor/working_dir/python_projects/opslog/docs/Examples.rst:199 <bullet_list>
                 > (0,0,1,0,2) bulleted list
              (continued) ListItem()
                   x (0,0,1,0,4) bulleted list item
                   > fallback to default style
                (continued) StaticGroupedFlowables()   None:None <list_item>
                     > (0,0,0,0,3) list item body
                  (continued) CodeBlock('> ls -l\n\ntotal 8\n-rw-r--r-- 1 as...')   /home/assessor/working_dir/python_projects/opslog/docs/Examples.rst:201 <literal_block>
                       > (1,0,0,0,2) code block
                         (0,0,0,0,4) list item paragraph
                         (0,0,0,0,1) body
                  List(style='bulleted')   /home/assessor/working_dir/python_projects/opslog/docs/Examples.rst:241 <bullet_list>
                       > (0,0,1,0,2) bulleted list
                    ListItem()
                         x (0,0,1,0,4) bulleted list item
                         > fallback to default style
                      ListItemLabel('•')
                           > (0,0,1,0,6) bulleted list item label
                             (0,0,0,0,2) list item label
                          MixedStyledText('•')
                            SingleStyledText('')
                            SingleStyledText('•')
                            SingleStyledText('')
                      StaticGroupedFlowables()   None:None <list_item>
                           > (0,0,0,0,3) list item body
                        Paragraph('Note 1: Currently, all logs you ...')   /home/assessor/working_dir/python_projects/opslog/docs/Examples.rst:241 <paragraph>
                             > (0,0,0,0,5) list item paragraph
                               (0,0,0,0,2) body
                          MixedStyledText('Note 1: Currently, all logs you ...')
                            SingleStyledText('Note 1: Currently, all logs you ...')
#### UpExpandingContainer('header')
  Header('OpsLog Documentation, Release v1...')
       > (0,0,0,0,2) header
         (0,0,0,0,1) body
    MixedStyledText('OpsLog Documentation, Release v1...')
      Field('OpsLog Documentation')
        SingleStyledText('OpsLog Documentation')
      SingleStyledText(', ')
      Field('Release v1.8 May, 2019')
        SingleStyledText('Release v1.8 May, 2019')
#### DownExpandingContainer('footer')
  Footer('10		Chapter 3.  Opslog Examples')
       > (0,0,0,0,2) footer
         (0,0,0,0,1) body
    MixedStyledText('10		Chapter 3.  Opslog Examples')
      Field('10')
        SingleStyledText('10')
      Tab('	')
      Tab('	')
      StringField('Chapter')
      SingleStyledText(' ')
      Field('3')
        SingleStyledText('3')
      SingleStyledText('.  ')
      Field('Opslog Examples')
        SingleStyledText('Opslog Examples')
---------------------------------- page 11 ----------------------------------
#### ChainedContainer('column1')
  StaticGroupedFlowables()
#### DownExpandingContainer('footer')
  Footer('		11')
       > (0,0,0,0,2) footer
         (0,0,0,0,1) body
    MixedStyledText('		11')
      Tab('	')
      Tab('	')
      Field('11')
        SingleStyledText('11')
